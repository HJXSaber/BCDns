<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>reflect.valueInterface (1 samples, 0.15%)</title><rect x="697.2" y="437" width="1.7" height="15.0" fill="rgb(242,177,21)" rx="2" ry="2" />
<text  x="700.16" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.add (1 samples, 0.15%)</title><rect x="229.0" y="357" width="1.8" height="15.0" fill="rgb(213,87,49)" rx="2" ry="2" />
<text  x="232.04" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (10 samples, 1.50%)</title><rect x="640.6" y="485" width="17.7" height="15.0" fill="rgb(251,22,43)" rx="2" ry="2" />
<text  x="643.63" y="495.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (2 samples, 0.30%)</title><rect x="879.1" y="453" width="3.5" height="15.0" fill="rgb(237,148,20)" rx="2" ry="2" />
<text  x="882.10" y="463.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (3 samples, 0.45%)</title><rect x="582.3" y="453" width="5.3" height="15.0" fill="rgb(216,188,30)" rx="2" ry="2" />
<text  x="585.34" y="463.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.15%)</title><rect x="741.3" y="485" width="1.8" height="15.0" fill="rgb(213,17,21)" rx="2" ry="2" />
<text  x="744.32" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="684.8" y="405" width="1.8" height="15.0" fill="rgb(254,214,19)" rx="2" ry="2" />
<text  x="687.79" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="691.9" y="485" width="1.7" height="15.0" fill="rgb(221,108,28)" rx="2" ry="2" />
<text  x="694.86" y="495.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.30%)</title><rect x="547.0" y="517" width="3.5" height="15.0" fill="rgb(221,127,19)" rx="2" ry="2" />
<text  x="550.01" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.45%)</title><rect x="504.6" y="421" width="5.3" height="15.0" fill="rgb(246,16,41)" rx="2" ry="2" />
<text  x="507.61" y="431.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (1 samples, 0.15%)</title><rect x="232.6" y="437" width="1.7" height="15.0" fill="rgb(215,23,39)" rx="2" ry="2" />
<text  x="235.57" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (1 samples, 0.15%)</title><rect x="578.8" y="453" width="1.8" height="15.0" fill="rgb(222,212,19)" rx="2" ry="2" />
<text  x="581.80" y="463.5" ></text>
</g>
<g >
<title>runtime.futexsleep (12 samples, 1.80%)</title><rect x="1039.9" y="501" width="21.1" height="15.0" fill="rgb(211,223,30)" rx="2" ry="2" />
<text  x="1042.85" y="511.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="709.5" y="533" width="1.8" height="15.0" fill="rgb(231,71,6)" rx="2" ry="2" />
<text  x="712.52" y="543.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.15%)</title><rect x="718.4" y="517" width="1.7" height="15.0" fill="rgb(243,135,46)" rx="2" ry="2" />
<text  x="721.35" y="527.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.15%)</title><rect x="916.2" y="485" width="1.8" height="15.0" fill="rgb(207,102,39)" rx="2" ry="2" />
<text  x="919.20" y="495.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.15%)</title><rect x="759.0" y="469" width="1.7" height="15.0" fill="rgb(235,106,11)" rx="2" ry="2" />
<text  x="761.98" y="479.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.15%)</title><rect x="674.2" y="453" width="1.8" height="15.0" fill="rgb(217,105,4)" rx="2" ry="2" />
<text  x="677.19" y="463.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.15%)</title><rect x="866.7" y="389" width="1.8" height="15.0" fill="rgb(218,197,13)" rx="2" ry="2" />
<text  x="869.74" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (2 samples, 0.30%)</title><rect x="547.0" y="533" width="3.5" height="15.0" fill="rgb(210,169,33)" rx="2" ry="2" />
<text  x="550.01" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="31.2" y="421" width="3.5" height="15.0" fill="rgb(241,107,18)" rx="2" ry="2" />
<text  x="34.20" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="275.0" y="437" width="3.5" height="15.0" fill="rgb(225,114,49)" rx="2" ry="2" />
<text  x="277.97" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (17 samples, 2.54%)</title><rect x="592.9" y="533" width="30.1" height="15.0" fill="rgb(218,124,16)" rx="2" ry="2" />
<text  x="595.93" y="543.5" >BC..</text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.15%)</title><rect x="280.3" y="549" width="1.7" height="15.0" fill="rgb(212,95,29)" rx="2" ry="2" />
<text  x="283.27" y="559.5" ></text>
</g>
<g >
<title>runtime.futexsleep (4 samples, 0.60%)</title><rect x="1182.9" y="533" width="7.1" height="15.0" fill="rgb(244,227,5)" rx="2" ry="2" />
<text  x="1185.93" y="543.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.15%)</title><rect x="269.7" y="293" width="1.7" height="15.0" fill="rgb(236,211,36)" rx="2" ry="2" />
<text  x="272.67" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.15%)</title><rect x="1181.2" y="469" width="1.7" height="15.0" fill="rgb(231,78,50)" rx="2" ry="2" />
<text  x="1184.17" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).erase (1 samples, 0.15%)</title><rect x="269.7" y="85" width="1.7" height="15.0" fill="rgb(216,143,50)" rx="2" ry="2" />
<text  x="272.67" y="95.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.15%)</title><rect x="626.5" y="469" width="1.8" height="15.0" fill="rgb(229,183,41)" rx="2" ry="2" />
<text  x="629.50" y="479.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.15%)</title><rect x="285.6" y="389" width="1.7" height="15.0" fill="rgb(248,79,18)" rx="2" ry="2" />
<text  x="288.57" y="399.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.15%)</title><rect x="709.5" y="405" width="1.8" height="15.0" fill="rgb(252,192,44)" rx="2" ry="2" />
<text  x="712.52" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="589.4" y="485" width="1.8" height="15.0" fill="rgb(254,208,7)" rx="2" ry="2" />
<text  x="592.40" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (2 samples, 0.30%)</title><rect x="543.5" y="517" width="3.5" height="15.0" fill="rgb(209,78,19)" rx="2" ry="2" />
<text  x="546.47" y="527.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.15%)</title><rect x="36.5" y="357" width="1.8" height="15.0" fill="rgb(238,134,36)" rx="2" ry="2" />
<text  x="39.50" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.15%)</title><rect x="57.7" y="389" width="1.8" height="15.0" fill="rgb(209,134,34)" rx="2" ry="2" />
<text  x="60.69" y="399.5" ></text>
</g>
<g >
<title>runtime.markroot (18 samples, 2.69%)</title><rect x="852.6" y="517" width="31.8" height="15.0" fill="rgb(238,131,40)" rx="2" ry="2" />
<text  x="855.60" y="527.5" >ru..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="282.0" y="341" width="3.6" height="15.0" fill="rgb(253,52,25)" rx="2" ry="2" />
<text  x="285.04" y="351.5" ></text>
</g>
<g >
<title>math/big.shlVU (2 samples, 0.30%)</title><rect x="244.9" y="373" width="3.6" height="15.0" fill="rgb(222,57,53)" rx="2" ry="2" />
<text  x="247.94" y="383.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.15%)</title><rect x="297.9" y="341" width="1.8" height="15.0" fill="rgb(225,206,31)" rx="2" ry="2" />
<text  x="300.93" y="351.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.15%)</title><rect x="702.5" y="565" width="1.7" height="15.0" fill="rgb(241,28,24)" rx="2" ry="2" />
<text  x="705.46" y="575.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (112 samples, 16.77%)</title><rect x="36.5" y="453" width="197.8" height="15.0" fill="rgb(233,9,44)" rx="2" ry="2" />
<text  x="39.50" y="463.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.30%)</title><rect x="665.4" y="485" width="3.5" height="15.0" fill="rgb(223,10,47)" rx="2" ry="2" />
<text  x="668.36" y="495.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.15%)</title><rect x="296.2" y="405" width="1.7" height="15.0" fill="rgb(212,21,26)" rx="2" ry="2" />
<text  x="299.17" y="415.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.15%)</title><rect x="57.7" y="357" width="1.8" height="15.0" fill="rgb(251,177,37)" rx="2" ry="2" />
<text  x="60.69" y="367.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.15%)</title><rect x="312.1" y="389" width="1.7" height="15.0" fill="rgb(248,227,9)" rx="2" ry="2" />
<text  x="315.07" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.Call (1 samples, 0.15%)</title><rect x="278.5" y="485" width="1.8" height="15.0" fill="rgb(223,55,3)" rx="2" ry="2" />
<text  x="281.50" y="495.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.15%)</title><rect x="925.0" y="549" width="1.8" height="15.0" fill="rgb(215,117,18)" rx="2" ry="2" />
<text  x="928.03" y="559.5" ></text>
</g>
<g >
<title>runtime.gcDrain (41 samples, 6.14%)</title><rect x="852.6" y="533" width="72.4" height="15.0" fill="rgb(206,110,11)" rx="2" ry="2" />
<text  x="855.60" y="543.5" >runtime...</text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.45%)</title><rect x="22.4" y="405" width="5.3" height="15.0" fill="rgb(221,52,36)" rx="2" ry="2" />
<text  x="25.37" y="415.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.15%)</title><rect x="679.5" y="437" width="1.8" height="15.0" fill="rgb(243,158,46)" rx="2" ry="2" />
<text  x="682.49" y="447.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (4 samples, 0.60%)</title><rect x="688.3" y="549" width="7.1" height="15.0" fill="rgb(214,212,4)" rx="2" ry="2" />
<text  x="691.32" y="559.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.15%)</title><rect x="654.8" y="437" width="1.7" height="15.0" fill="rgb(240,83,21)" rx="2" ry="2" />
<text  x="657.76" y="447.5" ></text>
</g>
<g >
<title>runtime.add1 (1 samples, 0.15%)</title><rect x="276.7" y="293" width="1.8" height="15.0" fill="rgb(232,177,38)" rx="2" ry="2" />
<text  x="279.74" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.30%)</title><rect x="840.2" y="565" width="3.6" height="15.0" fill="rgb(219,104,50)" rx="2" ry="2" />
<text  x="843.24" y="575.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.15%)</title><rect x="684.8" y="453" width="1.8" height="15.0" fill="rgb(212,110,27)" rx="2" ry="2" />
<text  x="687.79" y="463.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Tx).Commit (1 samples, 0.15%)</title><rect x="27.7" y="517" width="1.7" height="15.0" fill="rgb(235,217,44)" rx="2" ry="2" />
<text  x="30.66" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.30%)</title><rect x="275.0" y="485" width="3.5" height="15.0" fill="rgb(251,51,22)" rx="2" ry="2" />
<text  x="277.97" y="495.5" ></text>
</g>
<g >
<title>runtime.park_m (55 samples, 8.23%)</title><rect x="930.3" y="565" width="97.2" height="15.0" fill="rgb(216,40,10)" rx="2" ry="2" />
<text  x="933.33" y="575.5" >runtime.par..</text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.15%)</title><rect x="577.0" y="485" width="1.8" height="15.0" fill="rgb(222,182,1)" rx="2" ry="2" />
<text  x="580.04" y="495.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (3 samples, 0.45%)</title><rect x="31.2" y="485" width="5.3" height="15.0" fill="rgb(234,176,23)" rx="2" ry="2" />
<text  x="34.20" y="495.5" ></text>
</g>
<g >
<title>runtime.mcall (58 samples, 8.68%)</title><rect x="925.0" y="581" width="102.5" height="15.0" fill="rgb(244,6,25)" rx="2" ry="2" />
<text  x="928.03" y="591.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.epollwait (18 samples, 2.69%)</title><rect x="949.8" y="501" width="31.8" height="15.0" fill="rgb(216,181,50)" rx="2" ry="2" />
<text  x="952.76" y="511.5" >ru..</text>
</g>
<g >
<title>runtime.scanobject (22 samples, 3.29%)</title><rect x="886.2" y="517" width="38.8" height="15.0" fill="rgb(250,130,0)" rx="2" ry="2" />
<text  x="889.17" y="527.5" >run..</text>
</g>
<g >
<title>syscall.Syscall (4 samples, 0.60%)</title><rect x="262.6" y="421" width="7.1" height="15.0" fill="rgb(232,79,25)" rx="2" ry="2" />
<text  x="265.60" y="431.5" ></text>
</g>
<g >
<title>runtime.madvise (2 samples, 0.30%)</title><rect x="840.2" y="485" width="3.6" height="15.0" fill="rgb(228,210,13)" rx="2" ry="2" />
<text  x="843.24" y="495.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.15%)</title><rect x="545.2" y="453" width="1.8" height="15.0" fill="rgb(229,26,13)" rx="2" ry="2" />
<text  x="548.24" y="463.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.15%)</title><rect x="879.1" y="357" width="1.8" height="15.0" fill="rgb(223,173,52)" rx="2" ry="2" />
<text  x="882.10" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.15%)</title><rect x="849.1" y="453" width="1.7" height="15.0" fill="rgb(225,47,10)" rx="2" ry="2" />
<text  x="852.07" y="463.5" ></text>
</g>
<g >
<title>runtime.growWork (1 samples, 0.15%)</title><rect x="273.2" y="437" width="1.8" height="15.0" fill="rgb(222,8,13)" rx="2" ry="2" />
<text  x="276.20" y="447.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (2 samples, 0.30%)</title><rect x="1177.6" y="517" width="3.6" height="15.0" fill="rgb(224,56,27)" rx="2" ry="2" />
<text  x="1180.63" y="527.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.15%)</title><rect x="759.0" y="501" width="1.7" height="15.0" fill="rgb(231,112,19)" rx="2" ry="2" />
<text  x="761.98" y="511.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (6 samples, 0.90%)</title><rect x="222.0" y="421" width="10.6" height="15.0" fill="rgb(212,212,52)" rx="2" ry="2" />
<text  x="224.98" y="431.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (7 samples, 1.05%)</title><rect x="509.9" y="421" width="12.4" height="15.0" fill="rgb(227,70,23)" rx="2" ry="2" />
<text  x="512.91" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (7 samples, 1.05%)</title><rect x="827.9" y="485" width="12.3" height="15.0" fill="rgb(249,55,52)" rx="2" ry="2" />
<text  x="830.87" y="495.5" ></text>
</g>
<g >
<title>reflect.MakeSlice (1 samples, 0.15%)</title><rect x="276.7" y="373" width="1.8" height="15.0" fill="rgb(210,214,33)" rx="2" ry="2" />
<text  x="279.74" y="383.5" ></text>
</g>
<g >
<title>reflect.MakeMap (1 samples, 0.15%)</title><rect x="275.0" y="309" width="1.7" height="15.0" fill="rgb(225,1,10)" rx="2" ry="2" />
<text  x="277.97" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="282.0" y="309" width="3.6" height="15.0" fill="rgb(221,112,28)" rx="2" ry="2" />
<text  x="285.04" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.15%)</title><rect x="1025.7" y="501" width="1.8" height="15.0" fill="rgb(239,26,35)" rx="2" ry="2" />
<text  x="1028.72" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.30%)</title><rect x="847.3" y="501" width="3.5" height="15.0" fill="rgb(234,112,1)" rx="2" ry="2" />
<text  x="850.31" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.15%)</title><rect x="278.5" y="453" width="1.8" height="15.0" fill="rgb(243,146,43)" rx="2" ry="2" />
<text  x="281.50" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (3 samples, 0.45%)</title><rect x="282.0" y="517" width="5.3" height="15.0" fill="rgb(216,229,3)" rx="2" ry="2" />
<text  x="285.04" y="527.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).Flush (1 samples, 0.15%)</title><rect x="29.4" y="469" width="1.8" height="15.0" fill="rgb(244,31,5)" rx="2" ry="2" />
<text  x="32.43" y="479.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.15%)</title><rect x="626.5" y="437" width="1.8" height="15.0" fill="rgb(207,37,15)" rx="2" ry="2" />
<text  x="629.50" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (4 samples, 0.60%)</title><rect x="845.5" y="549" width="7.1" height="15.0" fill="rgb(244,83,54)" rx="2" ry="2" />
<text  x="848.54" y="559.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (5 samples, 0.75%)</title><rect x="236.1" y="373" width="8.8" height="15.0" fill="rgb(234,65,32)" rx="2" ry="2" />
<text  x="239.11" y="383.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.15%)</title><rect x="723.7" y="357" width="1.7" height="15.0" fill="rgb(222,98,45)" rx="2" ry="2" />
<text  x="726.65" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (3 samples, 0.45%)</title><rect x="282.0" y="533" width="5.3" height="15.0" fill="rgb(250,38,11)" rx="2" ry="2" />
<text  x="285.04" y="543.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.15%)</title><rect x="822.6" y="325" width="1.7" height="15.0" fill="rgb(225,119,14)" rx="2" ry="2" />
<text  x="825.57" y="335.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.memGet (1 samples, 0.15%)</title><rect x="623.0" y="453" width="1.7" height="15.0" fill="rgb(214,171,45)" rx="2" ry="2" />
<text  x="625.96" y="463.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.15%)</title><rect x="290.9" y="421" width="1.7" height="15.0" fill="rgb(232,29,2)" rx="2" ry="2" />
<text  x="293.87" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.15%)</title><rect x="822.6" y="517" width="1.7" height="15.0" fill="rgb(224,14,35)" rx="2" ry="2" />
<text  x="825.57" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="695.4" y="533" width="1.8" height="15.0" fill="rgb(206,139,2)" rx="2" ry="2" />
<text  x="698.39" y="543.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.15%)</title><rect x="822.6" y="437" width="1.7" height="15.0" fill="rgb(235,109,1)" rx="2" ry="2" />
<text  x="825.57" y="447.5" ></text>
</g>
<g >
<title>runtime.chansend (5 samples, 0.75%)</title><rect x="813.7" y="549" width="8.9" height="15.0" fill="rgb(219,218,40)" rx="2" ry="2" />
<text  x="816.74" y="559.5" ></text>
</g>
<g >
<title>runtime.globrunqget (1 samples, 0.15%)</title><rect x="928.6" y="501" width="1.7" height="15.0" fill="rgb(212,2,47)" rx="2" ry="2" />
<text  x="931.56" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.15%)</title><rect x="269.7" y="453" width="1.7" height="15.0" fill="rgb(249,28,11)" rx="2" ry="2" />
<text  x="272.67" y="463.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (2 samples, 0.30%)</title><rect x="547.0" y="485" width="3.5" height="15.0" fill="rgb(242,203,1)" rx="2" ry="2" />
<text  x="550.01" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (3 samples, 0.45%)</title><rect x="31.2" y="549" width="5.3" height="15.0" fill="rgb(251,143,47)" rx="2" ry="2" />
<text  x="34.20" y="559.5" ></text>
</g>
<g >
<title>runtime.bgsweep (5 samples, 0.75%)</title><rect x="843.8" y="581" width="8.8" height="15.0" fill="rgb(254,97,41)" rx="2" ry="2" />
<text  x="846.77" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.15%)</title><rect x="269.7" y="69" width="1.7" height="15.0" fill="rgb(208,204,39)" rx="2" ry="2" />
<text  x="272.67" y="79.5" ></text>
</g>
<g >
<title>math/big.(*Int).QuoRem (2 samples, 0.30%)</title><rect x="218.4" y="421" width="3.6" height="15.0" fill="rgb(228,142,23)" rx="2" ry="2" />
<text  x="221.44" y="431.5" ></text>
</g>
<g >
<title>encoding/binary.Read (1 samples, 0.15%)</title><rect x="716.6" y="533" width="1.8" height="15.0" fill="rgb(209,58,1)" rx="2" ry="2" />
<text  x="719.59" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="280.3" y="389" width="1.7" height="15.0" fill="rgb(207,213,37)" rx="2" ry="2" />
<text  x="283.27" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="711.3" y="533" width="1.8" height="15.0" fill="rgb(214,198,52)" rx="2" ry="2" />
<text  x="714.29" y="543.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).writePending (1 samples, 0.15%)</title><rect x="29.4" y="453" width="1.8" height="15.0" fill="rgb(231,100,25)" rx="2" ry="2" />
<text  x="32.43" y="463.5" ></text>
</g>
<g >
<title>reflect.Value.assignTo (1 samples, 0.15%)</title><rect x="580.6" y="437" width="1.7" height="15.0" fill="rgb(219,54,13)" rx="2" ry="2" />
<text  x="583.57" y="447.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (16 samples, 2.40%)</title><rect x="594.7" y="517" width="28.3" height="15.0" fill="rgb(215,118,36)" rx="2" ry="2" />
<text  x="597.70" y="527.5" >c..</text>
</g>
<g >
<title>strconv.ParseInt (1 samples, 0.15%)</title><rect x="282.0" y="245" width="1.8" height="15.0" fill="rgb(232,90,36)" rx="2" ry="2" />
<text  x="285.04" y="255.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (3 samples, 0.45%)</title><rect x="227.3" y="389" width="5.3" height="15.0" fill="rgb(225,133,9)" rx="2" ry="2" />
<text  x="230.28" y="399.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.45%)</title><rect x="22.4" y="389" width="5.3" height="15.0" fill="rgb(234,152,45)" rx="2" ry="2" />
<text  x="25.37" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.15%)</title><rect x="280.3" y="517" width="1.7" height="15.0" fill="rgb(242,14,1)" rx="2" ry="2" />
<text  x="283.27" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.ValidateProposals (2 samples, 0.30%)</title><rect x="271.4" y="533" width="3.6" height="15.0" fill="rgb(231,35,19)" rx="2" ry="2" />
<text  x="274.44" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.15%)</title><rect x="499.3" y="261" width="1.8" height="15.0" fill="rgb(223,146,1)" rx="2" ry="2" />
<text  x="502.31" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.GetPacketHeader (3 samples, 0.45%)</title><rect x="714.8" y="565" width="5.3" height="15.0" fill="rgb(205,150,49)" rx="2" ry="2" />
<text  x="717.82" y="575.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (5 samples, 0.75%)</title><rect x="260.8" y="469" width="8.9" height="15.0" fill="rgb(240,19,48)" rx="2" ry="2" />
<text  x="263.84" y="479.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.15%)</title><rect x="36.5" y="421" width="1.8" height="15.0" fill="rgb(243,109,48)" rx="2" ry="2" />
<text  x="39.50" y="431.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.45%)</title><rect x="986.9" y="485" width="5.3" height="15.0" fill="rgb(221,104,46)" rx="2" ry="2" />
<text  x="989.86" y="495.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (2 samples, 0.30%)</title><rect x="870.3" y="389" width="3.5" height="15.0" fill="rgb(219,38,2)" rx="2" ry="2" />
<text  x="873.27" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.15%)</title><rect x="499.3" y="213" width="1.8" height="15.0" fill="rgb(215,192,47)" rx="2" ry="2" />
<text  x="502.31" y="223.5" ></text>
</g>
<g >
<title>crypto/internal/randutil.MaybeReadByte (1 samples, 0.15%)</title><rect x="36.5" y="437" width="1.8" height="15.0" fill="rgb(237,3,13)" rx="2" ry="2" />
<text  x="39.50" y="447.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (4 samples, 0.60%)</title><rect x="1182.9" y="549" width="7.1" height="15.0" fill="rgb(209,34,49)" rx="2" ry="2" />
<text  x="1185.93" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.15%)</title><rect x="33.0" y="325" width="1.7" height="15.0" fill="rgb(251,138,38)" rx="2" ry="2" />
<text  x="35.96" y="335.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (118 samples, 17.66%)</title><rect x="301.5" y="453" width="208.4" height="15.0" fill="rgb(230,120,44)" rx="2" ry="2" />
<text  x="304.47" y="463.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.15%)</title><rect x="276.7" y="341" width="1.8" height="15.0" fill="rgb(237,46,45)" rx="2" ry="2" />
<text  x="279.74" y="351.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.15%)</title><rect x="27.7" y="421" width="1.7" height="15.0" fill="rgb(228,133,28)" rx="2" ry="2" />
<text  x="30.66" y="431.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (1 samples, 0.15%)</title><rect x="253.8" y="421" width="1.7" height="15.0" fill="rgb(229,218,50)" rx="2" ry="2" />
<text  x="256.77" y="431.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.15%)</title><rect x="709.5" y="421" width="1.8" height="15.0" fill="rgb(241,229,4)" rx="2" ry="2" />
<text  x="712.52" y="431.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.15%)</title><rect x="260.8" y="405" width="1.8" height="15.0" fill="rgb(219,91,42)" rx="2" ry="2" />
<text  x="263.84" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.30%)</title><rect x="631.8" y="437" width="3.5" height="15.0" fill="rgb(214,143,46)" rx="2" ry="2" />
<text  x="634.80" y="447.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.15%)</title><rect x="289.1" y="501" width="1.8" height="15.0" fill="rgb(211,224,0)" rx="2" ry="2" />
<text  x="292.10" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.30%)</title><rect x="290.9" y="485" width="3.5" height="15.0" fill="rgb(214,170,23)" rx="2" ry="2" />
<text  x="293.87" y="495.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (3 samples, 0.45%)</title><rect x="517.0" y="389" width="5.3" height="15.0" fill="rgb(234,167,16)" rx="2" ry="2" />
<text  x="519.98" y="399.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iStorageWriter).Write (1 samples, 0.15%)</title><rect x="29.4" y="437" width="1.8" height="15.0" fill="rgb(248,167,0)" rx="2" ry="2" />
<text  x="32.43" y="447.5" ></text>
</g>
<g >
<title>runtime.pollWork (1 samples, 0.15%)</title><rect x="884.4" y="517" width="1.8" height="15.0" fill="rgb(233,122,32)" rx="2" ry="2" />
<text  x="887.40" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.15%)</title><rect x="612.4" y="373" width="1.7" height="15.0" fill="rgb(219,53,23)" rx="2" ry="2" />
<text  x="615.37" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*BlockConfirmMessage).VerifySignature (1 samples, 0.15%)</title><rect x="638.9" y="565" width="1.7" height="15.0" fill="rgb(242,213,7)" rx="2" ry="2" />
<text  x="641.86" y="575.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.15%)</title><rect x="730.7" y="453" width="1.8" height="15.0" fill="rgb(216,38,34)" rx="2" ry="2" />
<text  x="733.72" y="463.5" ></text>
</g>
<g >
<title>runtime.netpollunblock (1 samples, 0.15%)</title><rect x="981.6" y="485" width="1.7" height="15.0" fill="rgb(221,183,14)" rx="2" ry="2" />
<text  x="984.56" y="495.5" ></text>
</g>
<g >
<title>syscall.read (10 samples, 1.50%)</title><rect x="10.0" y="501" width="17.7" height="15.0" fill="rgb(224,6,19)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>reflect.MakeSlice (1 samples, 0.15%)</title><rect x="33.0" y="389" width="1.7" height="15.0" fill="rgb(207,149,31)" rx="2" ry="2" />
<text  x="35.96" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.30%)</title><rect x="847.3" y="533" width="3.5" height="15.0" fill="rgb(253,33,47)" rx="2" ry="2" />
<text  x="850.31" y="543.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (22 samples, 3.29%)</title><rect x="658.3" y="565" width="38.9" height="15.0" fill="rgb(210,98,4)" rx="2" ry="2" />
<text  x="661.29" y="575.5" >enc..</text>
</g>
<g >
<title>reflect.MakeMap (2 samples, 0.30%)</title><rect x="681.3" y="469" width="3.5" height="15.0" fill="rgb(230,132,52)" rx="2" ry="2" />
<text  x="684.26" y="479.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.15%)</title><rect x="723.7" y="373" width="1.7" height="15.0" fill="rgb(229,57,37)" rx="2" ry="2" />
<text  x="726.65" y="383.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (3 samples, 0.45%)</title><rect x="504.6" y="389" width="5.3" height="15.0" fill="rgb(209,28,44)" rx="2" ry="2" />
<text  x="507.61" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (5 samples, 0.75%)</title><rect x="668.9" y="485" width="8.8" height="15.0" fill="rgb(249,149,49)" rx="2" ry="2" />
<text  x="671.89" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.call (1 samples, 0.15%)</title><rect x="278.5" y="469" width="1.8" height="15.0" fill="rgb(221,25,51)" rx="2" ry="2" />
<text  x="281.50" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="269.7" y="373" width="1.7" height="15.0" fill="rgb(207,29,32)" rx="2" ry="2" />
<text  x="272.67" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.15%)</title><rect x="229.0" y="341" width="1.8" height="15.0" fill="rgb(249,186,45)" rx="2" ry="2" />
<text  x="232.04" y="351.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (4 samples, 0.60%)</title><rect x="20.6" y="453" width="7.1" height="15.0" fill="rgb(245,149,42)" rx="2" ry="2" />
<text  x="23.60" y="463.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.30%)</title><rect x="1167.0" y="581" width="3.6" height="15.0" fill="rgb(232,116,38)" rx="2" ry="2" />
<text  x="1170.04" y="591.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.15%)</title><rect x="812.0" y="453" width="1.7" height="15.0" fill="rgb(218,6,14)" rx="2" ry="2" />
<text  x="814.98" y="463.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.30%)</title><rect x="635.3" y="501" width="3.6" height="15.0" fill="rgb(217,223,27)" rx="2" ry="2" />
<text  x="638.33" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="33.0" y="341" width="1.7" height="15.0" fill="rgb(228,204,18)" rx="2" ry="2" />
<text  x="35.96" y="351.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.15%)</title><rect x="759.0" y="485" width="1.7" height="15.0" fill="rgb(224,67,54)" rx="2" ry="2" />
<text  x="761.98" y="495.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.30%)</title><rect x="1177.6" y="485" width="3.6" height="15.0" fill="rgb(218,3,32)" rx="2" ry="2" />
<text  x="1180.63" y="495.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.45%)</title><rect x="815.5" y="421" width="5.3" height="15.0" fill="rgb(245,58,15)" rx="2" ry="2" />
<text  x="818.51" y="431.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.30%)</title><rect x="748.4" y="485" width="3.5" height="15.0" fill="rgb(243,107,39)" rx="2" ry="2" />
<text  x="751.38" y="495.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.15%)</title><rect x="700.7" y="485" width="1.8" height="15.0" fill="rgb(216,84,32)" rx="2" ry="2" />
<text  x="703.69" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.30%)</title><rect x="282.0" y="293" width="3.6" height="15.0" fill="rgb(226,218,3)" rx="2" ry="2" />
<text  x="285.04" y="303.5" ></text>
</g>
<g >
<title>math/big.putNat (2 samples, 0.30%)</title><rect x="534.6" y="389" width="3.6" height="15.0" fill="rgb(221,77,24)" rx="2" ry="2" />
<text  x="537.64" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.15%)</title><rect x="269.7" y="421" width="1.7" height="15.0" fill="rgb(215,55,15)" rx="2" ry="2" />
<text  x="272.67" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (41 samples, 6.14%)</title><rect x="852.6" y="565" width="72.4" height="15.0" fill="rgb(205,101,24)" rx="2" ry="2" />
<text  x="855.60" y="575.5" >runtime...</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.15%)</title><rect x="271.4" y="389" width="1.8" height="15.0" fill="rgb(211,110,12)" rx="2" ry="2" />
<text  x="274.44" y="399.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2 samples, 0.30%)</title><rect x="875.6" y="357" width="3.5" height="15.0" fill="rgb(227,82,32)" rx="2" ry="2" />
<text  x="878.57" y="367.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 0.45%)</title><rect x="211.4" y="357" width="5.3" height="15.0" fill="rgb(206,134,48)" rx="2" ry="2" />
<text  x="214.38" y="367.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (1 samples, 0.15%)</title><rect x="1181.2" y="485" width="1.7" height="15.0" fill="rgb(220,67,0)" rx="2" ry="2" />
<text  x="1184.17" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).mutate (1 samples, 0.15%)</title><rect x="829.6" y="421" width="1.8" height="15.0" fill="rgb(219,160,33)" rx="2" ry="2" />
<text  x="832.64" y="431.5" ></text>
</g>
<g >
<title>reflect.makemap (2 samples, 0.30%)</title><rect x="681.3" y="437" width="3.5" height="15.0" fill="rgb(216,0,1)" rx="2" ry="2" />
<text  x="684.26" y="447.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.15%)</title><rect x="38.3" y="405" width="1.7" height="15.0" fill="rgb(244,19,17)" rx="2" ry="2" />
<text  x="41.26" y="415.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (16 samples, 2.40%)</title><rect x="594.7" y="501" width="28.3" height="15.0" fill="rgb(237,34,22)" rx="2" ry="2" />
<text  x="597.70" y="511.5" >c..</text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.15%)</title><rect x="38.3" y="357" width="1.7" height="15.0" fill="rgb(225,207,4)" rx="2" ry="2" />
<text  x="41.26" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (10 samples, 1.50%)</title><rect x="822.6" y="565" width="17.6" height="15.0" fill="rgb(232,27,47)" rx="2" ry="2" />
<text  x="825.57" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="697.2" y="389" width="1.7" height="15.0" fill="rgb(230,221,33)" rx="2" ry="2" />
<text  x="700.16" y="399.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.15%)</title><rect x="716.6" y="485" width="1.8" height="15.0" fill="rgb(241,91,22)" rx="2" ry="2" />
<text  x="719.59" y="495.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (12 samples, 1.80%)</title><rect x="1039.9" y="517" width="21.1" height="15.0" fill="rgb(236,167,47)" rx="2" ry="2" />
<text  x="1042.85" y="527.5" ></text>
</g>
<g >
<title>runtime.send (4 samples, 0.60%)</title><rect x="815.5" y="533" width="7.1" height="15.0" fill="rgb(245,108,46)" rx="2" ry="2" />
<text  x="818.51" y="543.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (5 samples, 0.75%)</title><rect x="578.8" y="549" width="8.8" height="15.0" fill="rgb(227,86,35)" rx="2" ry="2" />
<text  x="581.80" y="559.5" ></text>
</g>
<g >
<title>reflect.Value.Bytes (1 samples, 0.15%)</title><rect x="577.0" y="437" width="1.8" height="15.0" fill="rgb(236,99,52)" rx="2" ry="2" />
<text  x="580.04" y="447.5" ></text>
</g>
<g >
<title>runtime.mstart1 (79 samples, 11.83%)</title><rect x="1027.5" y="565" width="139.5" height="15.0" fill="rgb(208,130,41)" rx="2" ry="2" />
<text  x="1030.49" y="575.5" >runtime.mstart1</text>
</g>
<g >
<title>math/big.nat.sub (1 samples, 0.15%)</title><rect x="299.7" y="421" width="1.8" height="15.0" fill="rgb(227,147,39)" rx="2" ry="2" />
<text  x="302.70" y="431.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.15%)</title><rect x="57.7" y="341" width="1.8" height="15.0" fill="rgb(231,145,29)" rx="2" ry="2" />
<text  x="60.69" y="351.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginString (1 samples, 0.15%)</title><rect x="31.2" y="341" width="1.8" height="15.0" fill="rgb(234,149,44)" rx="2" ry="2" />
<text  x="34.20" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Hash (6 samples, 0.90%)</title><rect x="250.2" y="501" width="10.6" height="15.0" fill="rgb(218,3,45)" rx="2" ry="2" />
<text  x="253.24" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="269.7" y="341" width="1.7" height="15.0" fill="rgb(207,189,7)" rx="2" ry="2" />
<text  x="272.67" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.30%)</title><rect x="282.0" y="325" width="3.6" height="15.0" fill="rgb(247,212,42)" rx="2" ry="2" />
<text  x="285.04" y="335.5" ></text>
</g>
<g >
<title>runtime.wakep (5 samples, 0.75%)</title><rect x="1015.1" y="517" width="8.9" height="15.0" fill="rgb(216,110,25)" rx="2" ry="2" />
<text  x="1018.12" y="527.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).Update (1 samples, 0.15%)</title><rect x="27.7" y="533" width="1.7" height="15.0" fill="rgb(234,172,7)" rx="2" ry="2" />
<text  x="30.66" y="543.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.15%)</title><rect x="626.5" y="517" width="1.8" height="15.0" fill="rgb(237,195,51)" rx="2" ry="2" />
<text  x="629.50" y="527.5" ></text>
</g>
<g >
<title>reflect.deepValueEqual (2 samples, 0.30%)</title><rect x="271.4" y="485" width="3.6" height="15.0" fill="rgb(223,226,27)" rx="2" ry="2" />
<text  x="274.44" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (10 samples, 1.50%)</title><rect x="594.7" y="437" width="17.7" height="15.0" fill="rgb(246,58,0)" rx="2" ry="2" />
<text  x="597.70" y="447.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (2 samples, 0.30%)</title><rect x="751.9" y="517" width="3.5" height="15.0" fill="rgb(253,133,28)" rx="2" ry="2" />
<text  x="754.92" y="527.5" ></text>
</g>
<g >
<title>math/big.subVV (2 samples, 0.30%)</title><rect x="538.2" y="389" width="3.5" height="15.0" fill="rgb(244,202,12)" rx="2" ry="2" />
<text  x="541.17" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.div (11 samples, 1.65%)</title><rect x="522.3" y="421" width="19.4" height="15.0" fill="rgb(242,138,8)" rx="2" ry="2" />
<text  x="525.28" y="431.5" ></text>
</g>
<g >
<title>encoding/json.indirect (4 samples, 0.60%)</title><rect x="668.9" y="469" width="7.1" height="15.0" fill="rgb(248,39,4)" rx="2" ry="2" />
<text  x="671.89" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.30%)</title><rect x="665.4" y="453" width="3.5" height="15.0" fill="rgb(216,67,42)" rx="2" ry="2" />
<text  x="668.36" y="463.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.15%)</title><rect x="822.6" y="453" width="1.7" height="15.0" fill="rgb(212,11,32)" rx="2" ry="2" />
<text  x="825.57" y="463.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.30%)</title><rect x="547.0" y="501" width="3.5" height="15.0" fill="rgb(226,96,7)" rx="2" ry="2" />
<text  x="550.01" y="511.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.45%)</title><rect x="815.5" y="405" width="5.3" height="15.0" fill="rgb(206,220,13)" rx="2" ry="2" />
<text  x="818.51" y="415.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.15%)</title><rect x="736.0" y="469" width="1.8" height="15.0" fill="rgb(219,114,43)" rx="2" ry="2" />
<text  x="739.02" y="479.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.15%)</title><rect x="679.5" y="421" width="1.8" height="15.0" fill="rgb(220,53,7)" rx="2" ry="2" />
<text  x="682.49" y="431.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (1 samples, 0.15%)</title><rect x="707.8" y="565" width="1.7" height="15.0" fill="rgb(211,26,48)" rx="2" ry="2" />
<text  x="710.75" y="575.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.15%)</title><rect x="612.4" y="453" width="1.7" height="15.0" fill="rgb(252,51,49)" rx="2" ry="2" />
<text  x="615.37" y="463.5" ></text>
</g>
<g >
<title>net.(*conn).Write (5 samples, 0.75%)</title><rect x="260.8" y="501" width="8.9" height="15.0" fill="rgb(205,90,21)" rx="2" ry="2" />
<text  x="263.84" y="511.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (3 samples, 0.45%)</title><rect x="222.0" y="389" width="5.3" height="15.0" fill="rgb(242,14,14)" rx="2" ry="2" />
<text  x="224.98" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).handleProposal (27 samples, 4.04%)</title><rect x="591.2" y="565" width="47.7" height="15.0" fill="rgb(205,102,41)" rx="2" ry="2" />
<text  x="594.17" y="575.5" >BCDn..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.15%)</title><rect x="31.2" y="373" width="1.8" height="15.0" fill="rgb(225,18,2)" rx="2" ry="2" />
<text  x="34.20" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 1.35%)</title><rect x="824.3" y="533" width="15.9" height="15.0" fill="rgb(229,111,44)" rx="2" ry="2" />
<text  x="827.34" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.30%)</title><rect x="275.0" y="453" width="3.5" height="15.0" fill="rgb(230,82,46)" rx="2" ry="2" />
<text  x="277.97" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.15%)</title><rect x="31.2" y="357" width="1.8" height="15.0" fill="rgb(242,184,24)" rx="2" ry="2" />
<text  x="34.20" y="367.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.15%)</title><rect x="697.2" y="517" width="1.7" height="15.0" fill="rgb(233,166,6)" rx="2" ry="2" />
<text  x="700.16" y="527.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (1 samples, 0.15%)</title><rect x="697.2" y="533" width="1.7" height="15.0" fill="rgb(217,135,18)" rx="2" ry="2" />
<text  x="700.16" y="543.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (5 samples, 0.75%)</title><rect x="803.1" y="453" width="8.9" height="15.0" fill="rgb(252,185,20)" rx="2" ry="2" />
<text  x="806.14" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (11 samples, 1.65%)</title><rect x="721.9" y="501" width="19.4" height="15.0" fill="rgb(243,229,17)" rx="2" ry="2" />
<text  x="724.89" y="511.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (3 samples, 0.45%)</title><rect x="227.3" y="373" width="5.3" height="15.0" fill="rgb(206,138,8)" rx="2" ry="2" />
<text  x="230.28" y="383.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.15%)</title><rect x="614.1" y="437" width="1.8" height="15.0" fill="rgb(246,182,16)" rx="2" ry="2" />
<text  x="617.13" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.15%)</title><rect x="269.7" y="149" width="1.7" height="15.0" fill="rgb(241,32,9)" rx="2" ry="2" />
<text  x="272.67" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.15%)</title><rect x="545.2" y="469" width="1.8" height="15.0" fill="rgb(226,91,53)" rx="2" ry="2" />
<text  x="548.24" y="479.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (1 samples, 0.15%)</title><rect x="723.7" y="389" width="1.7" height="15.0" fill="rgb(233,27,40)" rx="2" ry="2" />
<text  x="726.65" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.MapIndex (1 samples, 0.15%)</title><rect x="580.6" y="453" width="1.7" height="15.0" fill="rgb(243,57,28)" rx="2" ry="2" />
<text  x="583.57" y="463.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.15%)</title><rect x="925.0" y="533" width="1.8" height="15.0" fill="rgb(234,53,10)" rx="2" ry="2" />
<text  x="928.03" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).Get (3 samples, 0.45%)</title><rect x="282.0" y="485" width="5.3" height="15.0" fill="rgb(245,44,24)" rx="2" ry="2" />
<text  x="285.04" y="495.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.15%)</title><rect x="267.9" y="405" width="1.8" height="15.0" fill="rgb(220,224,28)" rx="2" ry="2" />
<text  x="270.90" y="415.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iComparer).Compare (1 samples, 0.15%)</title><rect x="623.0" y="405" width="1.7" height="15.0" fill="rgb(235,25,7)" rx="2" ry="2" />
<text  x="625.96" y="415.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.15%)</title><rect x="299.7" y="357" width="1.8" height="15.0" fill="rgb(215,25,33)" rx="2" ry="2" />
<text  x="302.70" y="367.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.15%)</title><rect x="294.4" y="485" width="1.8" height="15.0" fill="rgb(205,140,43)" rx="2" ry="2" />
<text  x="297.40" y="495.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.15%)</title><rect x="29.4" y="405" width="1.8" height="15.0" fill="rgb(216,102,23)" rx="2" ry="2" />
<text  x="32.43" y="415.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.15%)</title><rect x="273.2" y="453" width="1.8" height="15.0" fill="rgb(241,183,39)" rx="2" ry="2" />
<text  x="276.20" y="463.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (2 samples, 0.30%)</title><rect x="290.9" y="437" width="3.5" height="15.0" fill="rgb(238,24,31)" rx="2" ry="2" />
<text  x="293.87" y="447.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.15%)</title><rect x="280.3" y="437" width="1.7" height="15.0" fill="rgb(238,88,41)" rx="2" ry="2" />
<text  x="283.27" y="447.5" ></text>
</g>
<g >
<title>syscall.read (29 samples, 4.34%)</title><rect x="762.5" y="501" width="51.2" height="15.0" fill="rgb(209,154,46)" rx="2" ry="2" />
<text  x="765.51" y="511.5" >sysca..</text>
</g>
<g >
<title>runtime.retake (1 samples, 0.15%)</title><rect x="1061.0" y="533" width="1.8" height="15.0" fill="rgb(225,123,9)" rx="2" ry="2" />
<text  x="1064.05" y="543.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.15%)</title><rect x="36.5" y="373" width="1.8" height="15.0" fill="rgb(235,65,26)" rx="2" ry="2" />
<text  x="39.50" y="383.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.15%)</title><rect x="31.2" y="325" width="1.8" height="15.0" fill="rgb(226,223,52)" rx="2" ry="2" />
<text  x="34.20" y="335.5" ></text>
</g>
<g >
<title>runtime.add1 (1 samples, 0.15%)</title><rect x="923.3" y="485" width="1.7" height="15.0" fill="rgb(254,195,15)" rx="2" ry="2" />
<text  x="926.26" y="495.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (57 samples, 8.53%)</title><rect x="388.0" y="389" width="100.7" height="15.0" fill="rgb(216,199,43)" rx="2" ry="2" />
<text  x="391.02" y="399.5" >math/big.add..</text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (121 samples, 18.11%)</title><rect x="36.5" y="485" width="213.7" height="15.0" fill="rgb(238,122,19)" rx="2" ry="2" />
<text  x="39.50" y="495.5" >crypto/rsa.SignPKCS1v15</text>
</g>
<g >
<title>math/big.(*Int).Exp (16 samples, 2.40%)</title><rect x="594.7" y="485" width="28.3" height="15.0" fill="rgb(219,60,51)" rx="2" ry="2" />
<text  x="597.70" y="495.5" >m..</text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.45%)</title><rect x="912.7" y="501" width="5.3" height="15.0" fill="rgb(222,209,27)" rx="2" ry="2" />
<text  x="915.66" y="511.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (10 samples, 1.50%)</title><rect x="10.0" y="549" width="17.7" height="15.0" fill="rgb(242,95,26)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeLocked (2 samples, 0.30%)</title><rect x="840.2" y="533" width="3.6" height="15.0" fill="rgb(214,3,38)" rx="2" ry="2" />
<text  x="843.24" y="543.5" ></text>
</g>
<g >
<title>reflect.DeepEqual (2 samples, 0.30%)</title><rect x="271.4" y="517" width="3.6" height="15.0" fill="rgb(214,143,14)" rx="2" ry="2" />
<text  x="274.44" y="527.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (2 samples, 0.30%)</title><rect x="926.8" y="549" width="3.5" height="15.0" fill="rgb(240,34,35)" rx="2" ry="2" />
<text  x="929.80" y="559.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (128 samples, 19.16%)</title><rect x="296.2" y="469" width="226.1" height="15.0" fill="rgb(210,83,25)" rx="2" ry="2" />
<text  x="299.17" y="479.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>runtime.entersyscall_sysmon (3 samples, 0.45%)</title><rect x="806.7" y="421" width="5.3" height="15.0" fill="rgb(249,52,21)" rx="2" ry="2" />
<text  x="809.68" y="431.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.15%)</title><rect x="592.9" y="469" width="1.8" height="15.0" fill="rgb(232,101,29)" rx="2" ry="2" />
<text  x="595.93" y="479.5" ></text>
</g>
<g >
<title>runtime.sysUnused (2 samples, 0.30%)</title><rect x="840.2" y="501" width="3.6" height="15.0" fill="rgb(207,60,48)" rx="2" ry="2" />
<text  x="843.24" y="511.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (3 samples, 0.45%)</title><rect x="253.8" y="485" width="5.3" height="15.0" fill="rgb(247,177,20)" rx="2" ry="2" />
<text  x="256.77" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall (10 samples, 1.50%)</title><rect x="10.0" y="485" width="17.7" height="15.0" fill="rgb(225,10,11)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*BlockConfirmMessage).Hash (1 samples, 0.15%)</title><rect x="638.9" y="549" width="1.7" height="15.0" fill="rgb(218,101,14)" rx="2" ry="2" />
<text  x="641.86" y="559.5" ></text>
</g>
<g >
<title>runtime.gosched_m (2 samples, 0.30%)</title><rect x="926.8" y="565" width="3.5" height="15.0" fill="rgb(254,80,37)" rx="2" ry="2" />
<text  x="929.80" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="282.0" y="277" width="3.6" height="15.0" fill="rgb(220,186,45)" rx="2" ry="2" />
<text  x="285.04" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (1 samples, 0.15%)</title><rect x="757.2" y="517" width="1.8" height="15.0" fill="rgb(233,80,22)" rx="2" ry="2" />
<text  x="760.22" y="527.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.15%)</title><rect x="592.9" y="485" width="1.8" height="15.0" fill="rgb(225,21,36)" rx="2" ry="2" />
<text  x="595.93" y="495.5" ></text>
</g>
<g >
<title>runtime.getStackMap (3 samples, 0.45%)</title><rect x="868.5" y="405" width="5.3" height="15.0" fill="rgb(206,21,18)" rx="2" ry="2" />
<text  x="871.50" y="415.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.15%)</title><rect x="925.0" y="501" width="1.8" height="15.0" fill="rgb(242,132,44)" rx="2" ry="2" />
<text  x="928.03" y="511.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).start (1 samples, 0.15%)</title><rect x="942.7" y="517" width="1.8" height="15.0" fill="rgb(211,38,5)" rx="2" ry="2" />
<text  x="945.69" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.15%)</title><rect x="626.5" y="501" width="1.8" height="15.0" fill="rgb(227,72,43)" rx="2" ry="2" />
<text  x="629.50" y="511.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.15%)</title><rect x="255.5" y="405" width="1.8" height="15.0" fill="rgb(239,144,26)" rx="2" ry="2" />
<text  x="258.54" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.30%)</title><rect x="282.0" y="389" width="3.6" height="15.0" fill="rgb(234,5,25)" rx="2" ry="2" />
<text  x="285.04" y="399.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.15%)</title><rect x="925.0" y="517" width="1.8" height="15.0" fill="rgb(214,59,0)" rx="2" ry="2" />
<text  x="928.03" y="527.5" ></text>
</g>
<g >
<title>encoding/json.newEncodeState (1 samples, 0.15%)</title><rect x="257.3" y="469" width="1.8" height="15.0" fill="rgb(246,10,9)" rx="2" ry="2" />
<text  x="260.31" y="479.5" ></text>
</g>
<g >
<title>runtime.runqsteal (4 samples, 0.60%)</title><rect x="985.1" y="517" width="7.1" height="15.0" fill="rgb(227,22,54)" rx="2" ry="2" />
<text  x="988.09" y="527.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (1 samples, 0.15%)</title><rect x="589.4" y="517" width="1.8" height="15.0" fill="rgb(246,152,21)" rx="2" ry="2" />
<text  x="592.40" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (9 samples, 1.35%)</title><rect x="234.3" y="421" width="15.9" height="15.0" fill="rgb(220,224,20)" rx="2" ry="2" />
<text  x="237.34" y="431.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.15%)</title><rect x="612.4" y="277" width="1.7" height="15.0" fill="rgb(205,66,12)" rx="2" ry="2" />
<text  x="615.37" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="269.7" y="245" width="1.7" height="15.0" fill="rgb(233,109,39)" rx="2" ry="2" />
<text  x="272.67" y="255.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (4 samples, 0.60%)</title><rect x="815.5" y="485" width="7.1" height="15.0" fill="rgb(248,49,6)" rx="2" ry="2" />
<text  x="818.51" y="495.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.15%)</title><rect x="280.3" y="501" width="1.7" height="15.0" fill="rgb(251,181,0)" rx="2" ry="2" />
<text  x="283.27" y="511.5" ></text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.15%)</title><rect x="292.6" y="421" width="1.8" height="15.0" fill="rgb(225,5,44)" rx="2" ry="2" />
<text  x="295.63" y="431.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.15%)</title><rect x="926.8" y="517" width="1.8" height="15.0" fill="rgb(227,81,46)" rx="2" ry="2" />
<text  x="929.80" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).ValidateMod (27 samples, 4.04%)</title><rect x="591.2" y="549" width="47.7" height="15.0" fill="rgb(231,58,22)" rx="2" ry="2" />
<text  x="594.17" y="559.5" >BCDn..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.30%)</title><rect x="31.2" y="437" width="3.5" height="15.0" fill="rgb(247,193,2)" rx="2" ry="2" />
<text  x="34.20" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (10 samples, 1.50%)</title><rect x="640.6" y="549" width="17.7" height="15.0" fill="rgb(241,212,9)" rx="2" ry="2" />
<text  x="643.63" y="559.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (3 samples, 0.45%)</title><rect x="615.9" y="421" width="5.3" height="15.0" fill="rgb(216,54,47)" rx="2" ry="2" />
<text  x="618.90" y="431.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (5 samples, 0.75%)</title><rect x="578.8" y="469" width="8.8" height="15.0" fill="rgb(211,193,22)" rx="2" ry="2" />
<text  x="581.80" y="479.5" ></text>
</g>
<g >
<title>syscall.Write (15 samples, 2.25%)</title><rect x="550.5" y="469" width="26.5" height="15.0" fill="rgb(235,134,42)" rx="2" ry="2" />
<text  x="553.54" y="479.5" >s..</text>
</g>
<g >
<title>runtime.hashGrow (1 samples, 0.15%)</title><rect x="589.4" y="533" width="1.8" height="15.0" fill="rgb(220,213,39)" rx="2" ry="2" />
<text  x="592.40" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (2 samples, 0.30%)</title><rect x="847.3" y="469" width="3.5" height="15.0" fill="rgb(220,125,31)" rx="2" ry="2" />
<text  x="850.31" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="280.3" y="373" width="1.7" height="15.0" fill="rgb(225,114,35)" rx="2" ry="2" />
<text  x="283.27" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.15%)</title><rect x="269.7" y="53" width="1.7" height="15.0" fill="rgb(230,189,27)" rx="2" ry="2" />
<text  x="272.67" y="63.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.15%)</title><rect x="709.5" y="469" width="1.8" height="15.0" fill="rgb(237,67,12)" rx="2" ry="2" />
<text  x="712.52" y="479.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.15%)</title><rect x="38.3" y="421" width="1.7" height="15.0" fill="rgb(251,59,30)" rx="2" ry="2" />
<text  x="41.26" y="431.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).Find (1 samples, 0.15%)</title><rect x="623.0" y="437" width="1.7" height="15.0" fill="rgb(225,110,6)" rx="2" ry="2" />
<text  x="625.96" y="447.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (1 samples, 0.15%)</title><rect x="919.7" y="501" width="1.8" height="15.0" fill="rgb(207,201,51)" rx="2" ry="2" />
<text  x="922.73" y="511.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.15%)</title><rect x="612.4" y="309" width="1.7" height="15.0" fill="rgb(248,71,6)" rx="2" ry="2" />
<text  x="615.37" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (2 samples, 0.30%)</title><rect x="748.4" y="501" width="3.5" height="15.0" fill="rgb(239,25,35)" rx="2" ry="2" />
<text  x="751.38" y="511.5" ></text>
</g>
<g >
<title>fmt.Printf (3 samples, 0.45%)</title><rect x="697.2" y="565" width="5.3" height="15.0" fill="rgb(241,16,42)" rx="2" ry="2" />
<text  x="700.16" y="575.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.15%)</title><rect x="287.3" y="501" width="1.8" height="15.0" fill="rgb(254,70,30)" rx="2" ry="2" />
<text  x="290.34" y="511.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Delete (1 samples, 0.15%)</title><rect x="29.4" y="533" width="1.8" height="15.0" fill="rgb(206,186,20)" rx="2" ry="2" />
<text  x="32.43" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.15%)</title><rect x="621.2" y="421" width="1.8" height="15.0" fill="rgb(230,119,35)" rx="2" ry="2" />
<text  x="624.20" y="431.5" ></text>
</g>
<g >
<title>reflect.packEface (1 samples, 0.15%)</title><rect x="697.2" y="421" width="1.7" height="15.0" fill="rgb(211,165,41)" rx="2" ry="2" />
<text  x="700.16" y="431.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.45%)</title><rect x="806.7" y="405" width="5.3" height="15.0" fill="rgb(209,52,40)" rx="2" ry="2" />
<text  x="809.68" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.15%)</title><rect x="57.7" y="373" width="1.8" height="15.0" fill="rgb(238,147,28)" rx="2" ry="2" />
<text  x="60.69" y="383.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.15%)</title><rect x="698.9" y="485" width="1.8" height="15.0" fill="rgb(248,62,32)" rx="2" ry="2" />
<text  x="701.92" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.clear (4 samples, 0.60%)</title><rect x="209.6" y="373" width="7.1" height="15.0" fill="rgb(216,16,7)" rx="2" ry="2" />
<text  x="212.61" y="383.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.15%)</title><rect x="36.5" y="405" width="1.8" height="15.0" fill="rgb(234,21,6)" rx="2" ry="2" />
<text  x="39.50" y="415.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.15%)</title><rect x="319.1" y="357" width="1.8" height="15.0" fill="rgb(207,109,16)" rx="2" ry="2" />
<text  x="322.13" y="367.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (1 samples, 0.15%)</title><rect x="672.4" y="453" width="1.8" height="15.0" fill="rgb(244,97,19)" rx="2" ry="2" />
<text  x="675.43" y="463.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.15%)</title><rect x="577.0" y="421" width="1.8" height="15.0" fill="rgb(228,190,46)" rx="2" ry="2" />
<text  x="580.04" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (15 samples, 2.25%)</title><rect x="550.5" y="533" width="26.5" height="15.0" fill="rgb(248,53,10)" rx="2" ry="2" />
<text  x="553.54" y="543.5" >B..</text>
</g>
<g >
<title>runtime.futex (3 samples, 0.45%)</title><rect x="815.5" y="389" width="5.3" height="15.0" fill="rgb(229,119,50)" rx="2" ry="2" />
<text  x="818.51" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.15%)</title><rect x="651.2" y="437" width="1.8" height="15.0" fill="rgb(239,198,11)" rx="2" ry="2" />
<text  x="654.23" y="447.5" ></text>
</g>
<g >
<title>runtime.scang (1 samples, 0.15%)</title><rect x="822.6" y="421" width="1.7" height="15.0" fill="rgb(238,186,43)" rx="2" ry="2" />
<text  x="825.57" y="431.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).findGE (1 samples, 0.15%)</title><rect x="623.0" y="421" width="1.7" height="15.0" fill="rgb(229,58,38)" rx="2" ry="2" />
<text  x="625.96" y="431.5" ></text>
</g>
<g >
<title>runtime.goready (4 samples, 0.60%)</title><rect x="815.5" y="517" width="7.1" height="15.0" fill="rgb(233,216,49)" rx="2" ry="2" />
<text  x="818.51" y="527.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (2 samples, 0.30%)</title><rect x="623.0" y="485" width="3.5" height="15.0" fill="rgb(230,13,24)" rx="2" ry="2" />
<text  x="625.96" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.15%)</title><rect x="700.7" y="453" width="1.8" height="15.0" fill="rgb(250,70,9)" rx="2" ry="2" />
<text  x="703.69" y="463.5" ></text>
</g>
<g >
<title>runtime.sysmon (4 samples, 0.60%)</title><rect x="1170.6" y="581" width="7.0" height="15.0" fill="rgb(224,150,48)" rx="2" ry="2" />
<text  x="1173.57" y="591.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (8 samples, 1.20%)</title><rect x="41.8" y="389" width="14.1" height="15.0" fill="rgb(245,118,49)" rx="2" ry="2" />
<text  x="44.80" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next.func1 (3 samples, 0.45%)</title><rect x="282.0" y="437" width="5.3" height="15.0" fill="rgb(227,23,45)" rx="2" ry="2" />
<text  x="285.04" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).ExecuteBlock (137 samples, 20.51%)</title><rect x="27.7" y="565" width="242.0" height="15.0" fill="rgb(243,228,42)" rx="2" ry="2" />
<text  x="30.66" y="575.5" >BCDns_0.1/consensusMy/service.(*..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (7 samples, 1.05%)</title><rect x="723.7" y="485" width="12.3" height="15.0" fill="rgb(208,115,32)" rx="2" ry="2" />
<text  x="726.65" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (12 samples, 1.80%)</title><rect x="665.4" y="501" width="21.2" height="15.0" fill="rgb(228,100,18)" rx="2" ry="2" />
<text  x="668.36" y="511.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (121 samples, 18.11%)</title><rect x="36.5" y="469" width="213.7" height="15.0" fill="rgb(220,221,36)" rx="2" ry="2" />
<text  x="39.50" y="479.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.45%)</title><rect x="806.7" y="389" width="5.3" height="15.0" fill="rgb(237,196,30)" rx="2" ry="2" />
<text  x="809.68" y="399.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mod (2 samples, 0.30%)</title><rect x="218.4" y="437" width="3.6" height="15.0" fill="rgb(250,93,16)" rx="2" ry="2" />
<text  x="221.44" y="447.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.15%)</title><rect x="918.0" y="501" width="1.7" height="15.0" fill="rgb(230,14,4)" rx="2" ry="2" />
<text  x="920.96" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).handleOrder (175 samples, 26.20%)</title><rect x="282.0" y="565" width="309.2" height="15.0" fill="rgb(219,73,0)" rx="2" ry="2" />
<text  x="285.04" y="575.5" >BCDns_0.1/consensusMy/service.(*Consensus..</text>
</g>
<g >
<title>math/big.nat.expNN (118 samples, 17.66%)</title><rect x="301.5" y="437" width="208.4" height="15.0" fill="rgb(231,173,20)" rx="2" ry="2" />
<text  x="304.47" y="447.5" >math/big.nat.expNN</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="714.8" y="517" width="1.8" height="15.0" fill="rgb(249,150,10)" rx="2" ry="2" />
<text  x="717.82" y="527.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.15%)</title><rect x="297.9" y="437" width="1.8" height="15.0" fill="rgb(242,140,1)" rx="2" ry="2" />
<text  x="300.93" y="447.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.30%)</title><rect x="518.7" y="341" width="3.6" height="15.0" fill="rgb(223,9,1)" rx="2" ry="2" />
<text  x="521.74" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (4 samples, 0.60%)</title><rect x="490.5" y="373" width="7.0" height="15.0" fill="rgb(230,101,1)" rx="2" ry="2" />
<text  x="493.48" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.15%)</title><rect x="759.0" y="517" width="1.7" height="15.0" fill="rgb(221,167,6)" rx="2" ry="2" />
<text  x="761.98" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (3 samples, 0.45%)</title><rect x="31.2" y="501" width="5.3" height="15.0" fill="rgb(220,140,22)" rx="2" ry="2" />
<text  x="34.20" y="511.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.15%)</title><rect x="656.5" y="469" width="1.8" height="15.0" fill="rgb(214,181,34)" rx="2" ry="2" />
<text  x="659.53" y="479.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.15%)</title><rect x="822.6" y="293" width="1.7" height="15.0" fill="rgb(207,137,20)" rx="2" ry="2" />
<text  x="825.57" y="303.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.60%)</title><rect x="815.5" y="437" width="7.1" height="15.0" fill="rgb(213,194,32)" rx="2" ry="2" />
<text  x="818.51" y="447.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (101 samples, 15.12%)</title><rect x="40.0" y="437" width="178.4" height="15.0" fill="rgb(211,42,42)" rx="2" ry="2" />
<text  x="43.03" y="447.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>encoding/json.Unmarshal (6 samples, 0.90%)</title><rect x="628.3" y="517" width="10.6" height="15.0" fill="rgb(254,200,44)" rx="2" ry="2" />
<text  x="631.26" y="527.5" ></text>
</g>
<g >
<title>runtime.gentraceback (13 samples, 1.95%)</title><rect x="856.1" y="453" width="23.0" height="15.0" fill="rgb(254,39,25)" rx="2" ry="2" />
<text  x="859.14" y="463.5" >r..</text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.15%)</title><rect x="686.6" y="501" width="1.7" height="15.0" fill="rgb(210,49,16)" rx="2" ry="2" />
<text  x="689.56" y="511.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (103 samples, 15.42%)</title><rect x="322.7" y="405" width="181.9" height="15.0" fill="rgb(247,27,35)" rx="2" ry="2" />
<text  x="325.66" y="415.5" >math/big.nat.montgomery</text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.15%)</title><rect x="297.9" y="357" width="1.8" height="15.0" fill="rgb(253,144,36)" rx="2" ry="2" />
<text  x="300.93" y="367.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.15%)</title><rect x="1025.7" y="517" width="1.8" height="15.0" fill="rgb(235,25,50)" rx="2" ry="2" />
<text  x="1028.72" y="527.5" ></text>
</g>
<g >
<title>runtime.usleep (59 samples, 8.83%)</title><rect x="1062.8" y="533" width="104.2" height="15.0" fill="rgb(234,70,29)" rx="2" ry="2" />
<text  x="1065.81" y="543.5" >runtime.usleep</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="282.0" y="373" width="3.6" height="15.0" fill="rgb(254,107,47)" rx="2" ry="2" />
<text  x="285.04" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).ValidateBlock (3 samples, 0.45%)</title><rect x="269.7" y="549" width="5.3" height="15.0" fill="rgb(219,59,21)" rx="2" ry="2" />
<text  x="272.67" y="559.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.30%)</title><rect x="840.2" y="581" width="3.6" height="15.0" fill="rgb(211,105,18)" rx="2" ry="2" />
<text  x="843.24" y="591.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (1 samples, 0.15%)</title><rect x="47.1" y="341" width="1.8" height="15.0" fill="rgb(215,192,47)" rx="2" ry="2" />
<text  x="50.10" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.30%)</title><rect x="253.8" y="469" width="3.5" height="15.0" fill="rgb(245,221,43)" rx="2" ry="2" />
<text  x="256.77" y="479.5" ></text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.15%)</title><rect x="589.4" y="501" width="1.8" height="15.0" fill="rgb(217,191,43)" rx="2" ry="2" />
<text  x="592.40" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (2 samples, 0.30%)</title><rect x="732.5" y="469" width="3.5" height="15.0" fill="rgb(216,81,37)" rx="2" ry="2" />
<text  x="735.49" y="479.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (41 samples, 6.14%)</title><rect x="852.6" y="581" width="72.4" height="15.0" fill="rgb(223,16,47)" rx="2" ry="2" />
<text  x="855.60" y="591.5" >runtime...</text>
</g>
<g >
<title>runtime.sysmon (79 samples, 11.83%)</title><rect x="1027.5" y="549" width="139.5" height="15.0" fill="rgb(250,184,2)" rx="2" ry="2" />
<text  x="1030.49" y="559.5" >runtime.sysmon</text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.15%)</title><rect x="983.3" y="485" width="1.8" height="15.0" fill="rgb(222,89,7)" rx="2" ry="2" />
<text  x="986.32" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.30%)</title><rect x="275.0" y="421" width="3.5" height="15.0" fill="rgb(208,188,52)" rx="2" ry="2" />
<text  x="277.97" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.make (3 samples, 0.45%)</title><rect x="497.5" y="389" width="5.3" height="15.0" fill="rgb(246,161,2)" rx="2" ry="2" />
<text  x="500.54" y="399.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.15%)</title><rect x="541.7" y="389" width="1.8" height="15.0" fill="rgb(233,83,12)" rx="2" ry="2" />
<text  x="544.71" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (10 samples, 1.50%)</title><rect x="822.6" y="549" width="17.6" height="15.0" fill="rgb(236,65,16)" rx="2" ry="2" />
<text  x="825.57" y="559.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.15%)</title><rect x="248.5" y="373" width="1.7" height="15.0" fill="rgb(215,117,51)" rx="2" ry="2" />
<text  x="251.47" y="383.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.15%)</title><rect x="610.6" y="421" width="1.8" height="15.0" fill="rgb(244,116,43)" rx="2" ry="2" />
<text  x="613.60" y="431.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).get (2 samples, 0.30%)</title><rect x="623.0" y="469" width="3.5" height="15.0" fill="rgb(209,105,46)" rx="2" ry="2" />
<text  x="625.96" y="479.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (12 samples, 1.80%)</title><rect x="522.3" y="453" width="21.2" height="15.0" fill="rgb(236,109,25)" rx="2" ry="2" />
<text  x="525.28" y="463.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeJournal (1 samples, 0.15%)</title><rect x="29.4" y="485" width="1.8" height="15.0" fill="rgb(227,15,27)" rx="2" ry="2" />
<text  x="32.43" y="495.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.15%)</title><rect x="545.2" y="501" width="1.8" height="15.0" fill="rgb(218,93,47)" rx="2" ry="2" />
<text  x="548.24" y="511.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (41 samples, 6.14%)</title><rect x="852.6" y="549" width="72.4" height="15.0" fill="rgb(222,157,29)" rx="2" ry="2" />
<text  x="855.60" y="559.5" >runtime...</text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.15%)</title><rect x="36.5" y="389" width="1.8" height="15.0" fill="rgb(217,113,7)" rx="2" ry="2" />
<text  x="39.50" y="399.5" ></text>
</g>
<g >
<title>runtime.(*gList).empty (1 samples, 0.15%)</title><rect x="939.2" y="517" width="1.7" height="15.0" fill="rgb(226,10,27)" rx="2" ry="2" />
<text  x="942.16" y="527.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.15%)</title><rect x="709.5" y="501" width="1.8" height="15.0" fill="rgb(206,159,6)" rx="2" ry="2" />
<text  x="712.52" y="511.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.15%)</title><rect x="822.6" y="357" width="1.7" height="15.0" fill="rgb(238,130,14)" rx="2" ry="2" />
<text  x="825.57" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (7 samples, 1.05%)</title><rect x="303.2" y="405" width="12.4" height="15.0" fill="rgb(220,69,26)" rx="2" ry="2" />
<text  x="306.23" y="415.5" ></text>
</g>
<g >
<title>reflect.packEface (1 samples, 0.15%)</title><rect x="271.4" y="437" width="1.8" height="15.0" fill="rgb(224,19,38)" rx="2" ry="2" />
<text  x="274.44" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.15%)</title><rect x="684.8" y="373" width="1.8" height="15.0" fill="rgb(227,141,46)" rx="2" ry="2" />
<text  x="687.79" y="383.5" ></text>
</g>
<g >
<title>runtime.runqgrab (4 samples, 0.60%)</title><rect x="985.1" y="501" width="7.1" height="15.0" fill="rgb(249,26,26)" rx="2" ry="2" />
<text  x="988.09" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="283.8" y="229" width="1.8" height="15.0" fill="rgb(216,158,15)" rx="2" ry="2" />
<text  x="286.80" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="709.5" y="517" width="1.8" height="15.0" fill="rgb(224,220,12)" rx="2" ry="2" />
<text  x="712.52" y="527.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.15%)</title><rect x="589.4" y="469" width="1.8" height="15.0" fill="rgb(239,112,27)" rx="2" ry="2" />
<text  x="592.40" y="479.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.15%)</title><rect x="1038.1" y="517" width="1.8" height="15.0" fill="rgb(239,86,13)" rx="2" ry="2" />
<text  x="1041.08" y="527.5" ></text>
</g>
<g >
<title>runtime.startm (5 samples, 0.75%)</title><rect x="1015.1" y="501" width="8.9" height="15.0" fill="rgb(232,94,9)" rx="2" ry="2" />
<text  x="1018.12" y="511.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (9 samples, 1.35%)</title><rect x="640.6" y="453" width="15.9" height="15.0" fill="rgb(233,148,22)" rx="2" ry="2" />
<text  x="643.63" y="463.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollReset (1 samples, 0.15%)</title><rect x="260.8" y="421" width="1.8" height="15.0" fill="rgb(213,81,24)" rx="2" ry="2" />
<text  x="263.84" y="431.5" ></text>
</g>
<g >
<title>crypto/rand.Int (1 samples, 0.15%)</title><rect x="38.3" y="437" width="1.7" height="15.0" fill="rgb(250,155,37)" rx="2" ry="2" />
<text  x="41.26" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (5 samples, 0.75%)</title><rect x="578.8" y="517" width="8.8" height="15.0" fill="rgb(214,148,53)" rx="2" ry="2" />
<text  x="581.80" y="527.5" ></text>
</g>
<g >
<title>runtime.trygetfull (1 samples, 0.15%)</title><rect x="612.4" y="293" width="1.7" height="15.0" fill="rgb(227,31,21)" rx="2" ry="2" />
<text  x="615.37" y="303.5" ></text>
</g>
<g >
<title>runtime.entersyscall (4 samples, 0.60%)</title><rect x="20.6" y="469" width="7.1" height="15.0" fill="rgb(234,176,20)" rx="2" ry="2" />
<text  x="23.60" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.15%)</title><rect x="665.4" y="421" width="1.7" height="15.0" fill="rgb(218,94,48)" rx="2" ry="2" />
<text  x="668.36" y="431.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.60%)</title><rect x="1015.1" y="469" width="7.1" height="15.0" fill="rgb(215,54,13)" rx="2" ry="2" />
<text  x="1018.12" y="479.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.15%)</title><rect x="822.6" y="341" width="1.7" height="15.0" fill="rgb(234,179,28)" rx="2" ry="2" />
<text  x="825.57" y="351.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (5 samples, 0.75%)</title><rect x="578.8" y="485" width="8.8" height="15.0" fill="rgb(223,111,32)" rx="2" ry="2" />
<text  x="581.80" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.div (9 samples, 1.35%)</title><rect x="234.3" y="405" width="15.9" height="15.0" fill="rgb(212,205,11)" rx="2" ry="2" />
<text  x="237.34" y="415.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (7 samples, 1.05%)</title><rect x="509.9" y="453" width="12.4" height="15.0" fill="rgb(211,107,11)" rx="2" ry="2" />
<text  x="512.91" y="463.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (6 samples, 0.90%)</title><rect x="222.0" y="437" width="10.6" height="15.0" fill="rgb(245,179,51)" rx="2" ry="2" />
<text  x="224.98" y="447.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (1 samples, 0.15%)</title><rect x="1181.2" y="501" width="1.7" height="15.0" fill="rgb(217,135,38)" rx="2" ry="2" />
<text  x="1184.17" y="511.5" ></text>
</g>
<g >
<title>runtime.netpollready (1 samples, 0.15%)</title><rect x="981.6" y="501" width="1.7" height="15.0" fill="rgb(238,219,18)" rx="2" ry="2" />
<text  x="984.56" y="511.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.15%)</title><rect x="695.4" y="517" width="1.8" height="15.0" fill="rgb(250,183,10)" rx="2" ry="2" />
<text  x="698.39" y="527.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (1 samples, 0.15%)</title><rect x="501.1" y="277" width="1.7" height="15.0" fill="rgb(211,22,45)" rx="2" ry="2" />
<text  x="504.08" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (6 samples, 0.90%)</title><rect x="628.3" y="533" width="10.6" height="15.0" fill="rgb(251,39,21)" rx="2" ry="2" />
<text  x="631.26" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.15%)</title><rect x="253.8" y="389" width="1.7" height="15.0" fill="rgb(243,9,28)" rx="2" ry="2" />
<text  x="256.77" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="665.4" y="437" width="1.7" height="15.0" fill="rgb(252,42,19)" rx="2" ry="2" />
<text  x="668.36" y="447.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (58 samples, 8.68%)</title><rect x="107.2" y="373" width="102.4" height="15.0" fill="rgb(217,2,37)" rx="2" ry="2" />
<text  x="110.16" y="383.5" >math/big.add..</text>
</g>
<g >
<title>math/big.shlVU (1 samples, 0.15%)</title><rect x="653.0" y="437" width="1.8" height="15.0" fill="rgb(241,8,38)" rx="2" ry="2" />
<text  x="655.99" y="447.5" ></text>
</g>
<g >
<title>reflect.deepValueEqual (2 samples, 0.30%)</title><rect x="271.4" y="469" width="3.6" height="15.0" fill="rgb(213,170,17)" rx="2" ry="2" />
<text  x="274.44" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (3 samples, 0.45%)</title><rect x="31.2" y="517" width="5.3" height="15.0" fill="rgb(214,206,10)" rx="2" ry="2" />
<text  x="34.20" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.15%)</title><rect x="577.0" y="501" width="1.8" height="15.0" fill="rgb(234,68,53)" rx="2" ry="2" />
<text  x="580.04" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="585.9" y="421" width="1.7" height="15.0" fill="rgb(214,164,46)" rx="2" ry="2" />
<text  x="588.87" y="431.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.15%)</title><rect x="697.2" y="405" width="1.7" height="15.0" fill="rgb(223,113,41)" rx="2" ry="2" />
<text  x="700.16" y="415.5" ></text>
</g>
<g >
<title>reflect.mapiterinit (2 samples, 0.30%)</title><rect x="582.3" y="437" width="3.6" height="15.0" fill="rgb(239,219,35)" rx="2" ry="2" />
<text  x="585.34" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).SendReply (132 samples, 19.76%)</title><rect x="36.5" y="549" width="233.2" height="15.0" fill="rgb(209,92,34)" rx="2" ry="2" />
<text  x="39.50" y="559.5" >BCDns_0.1/consensusMy/service...</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.15%)</title><rect x="983.3" y="501" width="1.8" height="15.0" fill="rgb(226,74,45)" rx="2" ry="2" />
<text  x="986.32" y="511.5" ></text>
</g>
<g >
<title>syscall.Write (4 samples, 0.60%)</title><rect x="262.6" y="453" width="7.1" height="15.0" fill="rgb(210,184,38)" rx="2" ry="2" />
<text  x="265.60" y="463.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.15%)</title><rect x="297.9" y="421" width="1.8" height="15.0" fill="rgb(247,45,29)" rx="2" ry="2" />
<text  x="300.93" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.30%)</title><rect x="499.3" y="341" width="3.5" height="15.0" fill="rgb(212,154,23)" rx="2" ry="2" />
<text  x="502.31" y="351.5" ></text>
</g>
<g >
<title>runtime.epollwait (1 samples, 0.15%)</title><rect x="884.4" y="485" width="1.8" height="15.0" fill="rgb(241,149,8)" rx="2" ry="2" />
<text  x="887.40" y="495.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.15%)</title><rect x="709.5" y="565" width="1.8" height="15.0" fill="rgb(213,101,3)" rx="2" ry="2" />
<text  x="712.52" y="575.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.15%)</title><rect x="697.2" y="469" width="1.7" height="15.0" fill="rgb(239,1,1)" rx="2" ry="2" />
<text  x="700.16" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="299.7" y="373" width="1.8" height="15.0" fill="rgb(236,12,45)" rx="2" ry="2" />
<text  x="302.70" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.30%)</title><rect x="582.3" y="405" width="3.6" height="15.0" fill="rgb(241,9,36)" rx="2" ry="2" />
<text  x="585.34" y="415.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.15%)</title><rect x="1181.2" y="517" width="1.7" height="15.0" fill="rgb(254,18,49)" rx="2" ry="2" />
<text  x="1184.17" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.15%)</title><rect x="612.4" y="421" width="1.7" height="15.0" fill="rgb(239,163,36)" rx="2" ry="2" />
<text  x="615.37" y="431.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.15%)</title><rect x="697.2" y="501" width="1.7" height="15.0" fill="rgb(246,193,47)" rx="2" ry="2" />
<text  x="700.16" y="511.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (15 samples, 2.25%)</title><rect x="550.5" y="501" width="26.5" height="15.0" fill="rgb(229,62,30)" rx="2" ry="2" />
<text  x="553.54" y="511.5" >n..</text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (2 samples, 0.30%)</title><rect x="275.0" y="533" width="3.5" height="15.0" fill="rgb(216,9,7)" rx="2" ry="2" />
<text  x="277.97" y="543.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (1 samples, 0.15%)</title><rect x="280.3" y="485" width="1.7" height="15.0" fill="rgb(216,119,5)" rx="2" ry="2" />
<text  x="283.27" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.15%)</title><rect x="679.5" y="453" width="1.8" height="15.0" fill="rgb(241,10,13)" rx="2" ry="2" />
<text  x="682.49" y="463.5" ></text>
</g>
<g >
<title>runtime.findmoduledatap (1 samples, 0.15%)</title><rect x="880.9" y="421" width="1.7" height="15.0" fill="rgb(239,185,51)" rx="2" ry="2" />
<text  x="883.87" y="431.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.15%)</title><rect x="656.5" y="453" width="1.8" height="15.0" fill="rgb(235,141,40)" rx="2" ry="2" />
<text  x="659.53" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.clear (5 samples, 0.75%)</title><rect x="488.7" y="389" width="8.8" height="15.0" fill="rgb(250,138,7)" rx="2" ry="2" />
<text  x="491.71" y="399.5" ></text>
</g>
<g >
<title>math/big.(*Int).Sub (1 samples, 0.15%)</title><rect x="299.7" y="437" width="1.8" height="15.0" fill="rgb(230,78,24)" rx="2" ry="2" />
<text  x="302.70" y="447.5" ></text>
</g>
<g >
<title>runtime.pcvalue (3 samples, 0.45%)</title><rect x="859.7" y="421" width="5.3" height="15.0" fill="rgb(239,116,5)" rx="2" ry="2" />
<text  x="862.67" y="431.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.30%)</title><rect x="1177.6" y="453" width="3.6" height="15.0" fill="rgb(236,2,26)" rx="2" ry="2" />
<text  x="1180.63" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.15%)</title><rect x="757.2" y="501" width="1.8" height="15.0" fill="rgb(240,201,23)" rx="2" ry="2" />
<text  x="760.22" y="511.5" ></text>
</g>
<g >
<title>runtime.entersyscall (5 samples, 0.75%)</title><rect x="803.1" y="469" width="8.9" height="15.0" fill="rgb(253,179,6)" rx="2" ry="2" />
<text  x="806.14" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.div (8 samples, 1.20%)</title><rect x="41.8" y="405" width="14.1" height="15.0" fill="rgb(249,58,33)" rx="2" ry="2" />
<text  x="44.80" y="415.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.30%)</title><rect x="499.3" y="373" width="3.5" height="15.0" fill="rgb(235,9,20)" rx="2" ry="2" />
<text  x="502.31" y="383.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.15%)</title><rect x="884.4" y="501" width="1.8" height="15.0" fill="rgb(226,93,37)" rx="2" ry="2" />
<text  x="887.40" y="511.5" ></text>
</g>
<g >
<title>strconv.ParseUint (1 samples, 0.15%)</title><rect x="282.0" y="229" width="1.8" height="15.0" fill="rgb(218,159,30)" rx="2" ry="2" />
<text  x="285.04" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.15%)</title><rect x="926.8" y="501" width="1.8" height="15.0" fill="rgb(231,200,25)" rx="2" ry="2" />
<text  x="929.80" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).generateBlock (4 samples, 0.60%)</title><rect x="275.0" y="565" width="7.0" height="15.0" fill="rgb(235,152,37)" rx="2" ry="2" />
<text  x="277.97" y="575.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.15%)</title><rect x="918.0" y="485" width="1.7" height="15.0" fill="rgb(227,140,17)" rx="2" ry="2" />
<text  x="920.96" y="495.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).putRec (1 samples, 0.15%)</title><rect x="29.4" y="517" width="1.8" height="15.0" fill="rgb(225,142,25)" rx="2" ry="2" />
<text  x="32.43" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.15%)</title><rect x="269.7" y="389" width="1.7" height="15.0" fill="rgb(233,38,29)" rx="2" ry="2" />
<text  x="272.67" y="399.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.15%)</title><rect x="502.8" y="389" width="1.8" height="15.0" fill="rgb(223,95,4)" rx="2" ry="2" />
<text  x="505.84" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.15%)</title><rect x="269.7" y="197" width="1.7" height="15.0" fill="rgb(232,216,31)" rx="2" ry="2" />
<text  x="272.67" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).handleConn (72 samples, 10.78%)</title><rect x="713.1" y="581" width="127.1" height="15.0" fill="rgb(205,162,7)" rx="2" ry="2" />
<text  x="716.05" y="591.5" >BCDns_0.1/netwo..</text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.15%)</title><rect x="29.4" y="421" width="1.8" height="15.0" fill="rgb(232,95,0)" rx="2" ry="2" />
<text  x="32.43" y="431.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.15%)</title><rect x="269.7" y="37" width="1.7" height="15.0" fill="rgb(251,117,54)" rx="2" ry="2" />
<text  x="272.67" y="47.5" ></text>
</g>
<g >
<title>runtime.futexsleep (12 samples, 1.80%)</title><rect x="993.9" y="485" width="21.2" height="15.0" fill="rgb(245,164,48)" rx="2" ry="2" />
<text  x="996.92" y="495.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.15%)</title><rect x="313.8" y="389" width="1.8" height="15.0" fill="rgb(224,99,23)" rx="2" ry="2" />
<text  x="316.83" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mspan).scavenge (2 samples, 0.30%)</title><rect x="840.2" y="517" width="3.6" height="15.0" fill="rgb(232,129,39)" rx="2" ry="2" />
<text  x="843.24" y="527.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (2 samples, 0.30%)</title><rect x="875.6" y="389" width="3.5" height="15.0" fill="rgb(238,132,3)" rx="2" ry="2" />
<text  x="878.57" y="399.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (7 samples, 1.05%)</title><rect x="743.1" y="533" width="12.3" height="15.0" fill="rgb(250,87,28)" rx="2" ry="2" />
<text  x="746.08" y="543.5" ></text>
</g>
<g >
<title>syscall.write (15 samples, 2.25%)</title><rect x="550.5" y="453" width="26.5" height="15.0" fill="rgb(227,113,15)" rx="2" ry="2" />
<text  x="553.54" y="463.5" >s..</text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.15%)</title><rect x="269.7" y="101" width="1.7" height="15.0" fill="rgb(241,178,10)" rx="2" ry="2" />
<text  x="272.67" y="111.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (5 samples, 0.75%)</title><rect x="723.7" y="469" width="8.8" height="15.0" fill="rgb(216,160,16)" rx="2" ry="2" />
<text  x="726.65" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (16 samples, 2.40%)</title><rect x="550.5" y="549" width="28.3" height="15.0" fill="rgb(206,158,32)" rx="2" ry="2" />
<text  x="553.54" y="559.5" >B..</text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iComparer).uCompare (1 samples, 0.15%)</title><rect x="623.0" y="389" width="1.7" height="15.0" fill="rgb(253,108,45)" rx="2" ry="2" />
<text  x="625.96" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Sign (127 samples, 19.01%)</title><rect x="36.5" y="517" width="224.3" height="15.0" fill="rgb(212,225,6)" rx="2" ry="2" />
<text  x="39.50" y="527.5" >BCDns_0.1/messages.(*Proposal..</text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (1 samples, 0.15%)</title><rect x="633.6" y="421" width="1.7" height="15.0" fill="rgb(222,179,1)" rx="2" ry="2" />
<text  x="636.56" y="431.5" ></text>
</g>
<g >
<title>reflect.ValueOf (1 samples, 0.15%)</title><rect x="741.3" y="517" width="1.8" height="15.0" fill="rgb(245,19,5)" rx="2" ry="2" />
<text  x="744.32" y="527.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (2 samples, 0.30%)</title><rect x="290.9" y="469" width="3.5" height="15.0" fill="rgb(237,101,25)" rx="2" ry="2" />
<text  x="293.87" y="479.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.15%)</title><rect x="822.6" y="501" width="1.7" height="15.0" fill="rgb(231,33,53)" rx="2" ry="2" />
<text  x="825.57" y="511.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (2 samples, 0.30%)</title><rect x="518.7" y="357" width="3.6" height="15.0" fill="rgb(226,205,44)" rx="2" ry="2" />
<text  x="521.74" y="367.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.15%)</title><rect x="577.0" y="469" width="1.8" height="15.0" fill="rgb(208,4,16)" rx="2" ry="2" />
<text  x="580.04" y="479.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.15%)</title><rect x="541.7" y="405" width="1.8" height="15.0" fill="rgb(236,175,33)" rx="2" ry="2" />
<text  x="544.71" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.sub (1 samples, 0.15%)</title><rect x="230.8" y="357" width="1.8" height="15.0" fill="rgb(223,141,16)" rx="2" ry="2" />
<text  x="233.81" y="367.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.15%)</title><rect x="287.3" y="469" width="1.8" height="15.0" fill="rgb(227,118,21)" rx="2" ry="2" />
<text  x="290.34" y="479.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.15%)</title><rect x="827.9" y="421" width="1.7" height="15.0" fill="rgb(205,218,20)" rx="2" ry="2" />
<text  x="830.87" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast32 (1 samples, 0.15%)</title><rect x="723.7" y="341" width="1.7" height="15.0" fill="rgb(213,175,5)" rx="2" ry="2" />
<text  x="726.65" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (2 samples, 0.30%)</title><rect x="623.0" y="517" width="3.5" height="15.0" fill="rgb(237,122,35)" rx="2" ry="2" />
<text  x="625.96" y="527.5" ></text>
</g>
<g >
<title>runtime.netpoll (19 samples, 2.84%)</title><rect x="949.8" y="517" width="33.5" height="15.0" fill="rgb(245,144,38)" rx="2" ry="2" />
<text  x="952.76" y="527.5" >ru..</text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.15%)</title><rect x="280.3" y="421" width="1.7" height="15.0" fill="rgb(252,99,51)" rx="2" ry="2" />
<text  x="283.27" y="431.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (1 samples, 0.15%)</title><rect x="269.7" y="517" width="1.7" height="15.0" fill="rgb(247,160,40)" rx="2" ry="2" />
<text  x="272.67" y="527.5" ></text>
</g>
<g >
<title>reflect.mapiterinit (1 samples, 0.15%)</title><rect x="280.3" y="405" width="1.7" height="15.0" fill="rgb(241,174,6)" rx="2" ry="2" />
<text  x="283.27" y="415.5" ></text>
</g>
<g >
<title>runtime.schedule (54 samples, 8.08%)</title><rect x="932.1" y="549" width="95.4" height="15.0" fill="rgb(213,77,35)" rx="2" ry="2" />
<text  x="935.10" y="559.5" >runtime.sch..</text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (6 samples, 0.90%)</title><rect x="222.0" y="405" width="10.6" height="15.0" fill="rgb(214,215,20)" rx="2" ry="2" />
<text  x="224.98" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="718.4" y="533" width="1.7" height="15.0" fill="rgb(226,183,22)" rx="2" ry="2" />
<text  x="721.35" y="543.5" ></text>
</g>
<g >
<title>runtime.futex (12 samples, 1.80%)</title><rect x="1039.9" y="485" width="21.1" height="15.0" fill="rgb(210,194,24)" rx="2" ry="2" />
<text  x="1042.85" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (1 samples, 0.15%)</title><rect x="691.9" y="517" width="1.7" height="15.0" fill="rgb(221,108,12)" rx="2" ry="2" />
<text  x="694.86" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.15%)</title><rect x="736.0" y="453" width="1.8" height="15.0" fill="rgb(236,118,37)" rx="2" ry="2" />
<text  x="739.02" y="463.5" ></text>
</g>
<g >
<title>syscall.Pwrite (1 samples, 0.15%)</title><rect x="27.7" y="437" width="1.7" height="15.0" fill="rgb(218,222,30)" rx="2" ry="2" />
<text  x="30.66" y="447.5" ></text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.15%)</title><rect x="47.1" y="373" width="1.8" height="15.0" fill="rgb(243,206,0)" rx="2" ry="2" />
<text  x="50.10" y="383.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.15%)</title><rect x="29.4" y="341" width="1.8" height="15.0" fill="rgb(231,190,6)" rx="2" ry="2" />
<text  x="32.43" y="351.5" ></text>
</g>
<g >
<title>runtime.convTslice (1 samples, 0.15%)</title><rect x="283.8" y="245" width="1.8" height="15.0" fill="rgb(206,184,18)" rx="2" ry="2" />
<text  x="286.80" y="255.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.15%)</title><rect x="47.1" y="357" width="1.8" height="15.0" fill="rgb(229,57,15)" rx="2" ry="2" />
<text  x="50.10" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.15%)</title><rect x="612.4" y="389" width="1.7" height="15.0" fill="rgb(253,82,19)" rx="2" ry="2" />
<text  x="615.37" y="399.5" ></text>
</g>
<g >
<title>net.(*conn).Read (33 samples, 4.94%)</title><rect x="755.4" y="565" width="58.3" height="15.0" fill="rgb(242,36,50)" rx="2" ry="2" />
<text  x="758.45" y="575.5" >net.(*..</text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.15%)</title><rect x="253.8" y="405" width="1.7" height="15.0" fill="rgb(235,205,18)" rx="2" ry="2" />
<text  x="256.77" y="415.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.15%)</title><rect x="294.4" y="517" width="1.8" height="15.0" fill="rgb(230,50,13)" rx="2" ry="2" />
<text  x="297.40" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.30%)</title><rect x="499.3" y="293" width="3.5" height="15.0" fill="rgb(231,20,33)" rx="2" ry="2" />
<text  x="502.31" y="303.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.15%)</title><rect x="536.4" y="373" width="1.8" height="15.0" fill="rgb(207,210,20)" rx="2" ry="2" />
<text  x="539.41" y="383.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (3 samples, 0.45%)</title><rect x="725.4" y="453" width="5.3" height="15.0" fill="rgb(247,148,22)" rx="2" ry="2" />
<text  x="728.42" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.15%)</title><rect x="269.7" y="117" width="1.7" height="15.0" fill="rgb(238,166,20)" rx="2" ry="2" />
<text  x="272.67" y="127.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (3 samples, 0.45%)</title><rect x="31.2" y="533" width="5.3" height="15.0" fill="rgb(232,163,7)" rx="2" ry="2" />
<text  x="34.20" y="543.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.15%)</title><rect x="592.9" y="501" width="1.8" height="15.0" fill="rgb(210,66,40)" rx="2" ry="2" />
<text  x="595.93" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (1 samples, 0.15%)</title><rect x="252.0" y="485" width="1.8" height="15.0" fill="rgb(246,67,13)" rx="2" ry="2" />
<text  x="255.01" y="495.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (16 samples, 2.40%)</title><rect x="854.4" y="501" width="28.2" height="15.0" fill="rgb(226,213,54)" rx="2" ry="2" />
<text  x="857.37" y="511.5" >r..</text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.15%)</title><rect x="38.3" y="325" width="1.7" height="15.0" fill="rgb(232,126,41)" rx="2" ry="2" />
<text  x="41.26" y="335.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.15%)</title><rect x="822.6" y="405" width="1.7" height="15.0" fill="rgb(246,39,43)" rx="2" ry="2" />
<text  x="825.57" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.15%)</title><rect x="499.3" y="229" width="1.8" height="15.0" fill="rgb(244,67,51)" rx="2" ry="2" />
<text  x="502.31" y="239.5" ></text>
</g>
<g >
<title>os.(*File).WriteAt (1 samples, 0.15%)</title><rect x="27.7" y="485" width="1.7" height="15.0" fill="rgb(205,181,51)" rx="2" ry="2" />
<text  x="30.66" y="495.5" ></text>
</g>
<g >
<title>os.(*File).Write (2 samples, 0.30%)</title><rect x="698.9" y="533" width="3.6" height="15.0" fill="rgb(244,225,40)" rx="2" ry="2" />
<text  x="701.92" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).SendTo (5 samples, 0.75%)</title><rect x="260.8" y="533" width="8.9" height="15.0" fill="rgb(230,16,19)" rx="2" ry="2" />
<text  x="263.84" y="543.5" ></text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.15%)</title><rect x="33.0" y="357" width="1.7" height="15.0" fill="rgb(253,109,9)" rx="2" ry="2" />
<text  x="35.96" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Pwrite (1 samples, 0.15%)</title><rect x="27.7" y="453" width="1.7" height="15.0" fill="rgb(251,191,54)" rx="2" ry="2" />
<text  x="30.66" y="463.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.15%)</title><rect x="736.0" y="485" width="1.8" height="15.0" fill="rgb(244,229,23)" rx="2" ry="2" />
<text  x="739.02" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="665.4" y="469" width="3.5" height="15.0" fill="rgb(219,45,22)" rx="2" ry="2" />
<text  x="668.36" y="479.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (15 samples, 2.25%)</title><rect x="550.5" y="485" width="26.5" height="15.0" fill="rgb(207,35,54)" rx="2" ry="2" />
<text  x="553.54" y="495.5" >i..</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.15%)</title><rect x="677.7" y="469" width="1.8" height="15.0" fill="rgb(207,108,5)" rx="2" ry="2" />
<text  x="680.72" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.30%)</title><rect x="253.8" y="453" width="3.5" height="15.0" fill="rgb(207,119,50)" rx="2" ry="2" />
<text  x="256.77" y="463.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.15%)</title><rect x="691.9" y="501" width="1.7" height="15.0" fill="rgb(210,105,0)" rx="2" ry="2" />
<text  x="694.86" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (3 samples, 0.45%)</title><rect x="282.0" y="421" width="5.3" height="15.0" fill="rgb(251,213,13)" rx="2" ry="2" />
<text  x="285.04" y="431.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.15%)</title><rect x="820.8" y="421" width="1.8" height="15.0" fill="rgb(245,57,40)" rx="2" ry="2" />
<text  x="823.81" y="431.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.15%)</title><rect x="1025.7" y="533" width="1.8" height="15.0" fill="rgb(220,60,34)" rx="2" ry="2" />
<text  x="1028.72" y="543.5" ></text>
</g>
<g >
<title>runtime.readvarint (2 samples, 0.30%)</title><rect x="861.4" y="389" width="3.6" height="15.0" fill="rgb(240,136,14)" rx="2" ry="2" />
<text  x="864.44" y="399.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.15%)</title><rect x="269.7" y="469" width="1.7" height="15.0" fill="rgb(247,78,34)" rx="2" ry="2" />
<text  x="272.67" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.15%)</title><rect x="269.7" y="181" width="1.7" height="15.0" fill="rgb(234,172,29)" rx="2" ry="2" />
<text  x="272.67" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="275.0" y="405" width="3.5" height="15.0" fill="rgb(247,5,23)" rx="2" ry="2" />
<text  x="277.97" y="415.5" ></text>
</g>
<g >
<title>net.(*conn).Write (15 samples, 2.25%)</title><rect x="550.5" y="517" width="26.5" height="15.0" fill="rgb(250,185,0)" rx="2" ry="2" />
<text  x="553.54" y="527.5" >n..</text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.15%)</title><rect x="29.4" y="389" width="1.8" height="15.0" fill="rgb(223,212,38)" rx="2" ry="2" />
<text  x="32.43" y="399.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.15%)</title><rect x="822.6" y="533" width="1.7" height="15.0" fill="rgb(240,208,49)" rx="2" ry="2" />
<text  x="825.57" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.30%)</title><rect x="319.1" y="389" width="3.6" height="15.0" fill="rgb(231,112,15)" rx="2" ry="2" />
<text  x="322.13" y="399.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.30%)</title><rect x="253.8" y="437" width="3.5" height="15.0" fill="rgb(233,176,5)" rx="2" ry="2" />
<text  x="256.77" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.15%)</title><rect x="232.6" y="421" width="1.7" height="15.0" fill="rgb(223,119,22)" rx="2" ry="2" />
<text  x="235.57" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.30%)</title><rect x="319.1" y="405" width="3.6" height="15.0" fill="rgb(229,214,11)" rx="2" ry="2" />
<text  x="322.13" y="415.5" ></text>
</g>
<g >
<title>crypto/rand.Int (2 samples, 0.30%)</title><rect x="297.9" y="453" width="3.6" height="15.0" fill="rgb(214,179,50)" rx="2" ry="2" />
<text  x="300.93" y="463.5" ></text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.15%)</title><rect x="271.4" y="453" width="1.8" height="15.0" fill="rgb(207,120,3)" rx="2" ry="2" />
<text  x="274.44" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (5 samples, 0.75%)</title><rect x="831.4" y="469" width="8.8" height="15.0" fill="rgb(213,93,26)" rx="2" ry="2" />
<text  x="834.41" y="479.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.15%)</title><rect x="709.5" y="485" width="1.8" height="15.0" fill="rgb(241,181,45)" rx="2" ry="2" />
<text  x="712.52" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="683.0" y="389" width="1.8" height="15.0" fill="rgb(214,182,0)" rx="2" ry="2" />
<text  x="686.02" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.30%)</title><rect x="827.9" y="469" width="3.5" height="15.0" fill="rgb(226,111,49)" rx="2" ry="2" />
<text  x="830.87" y="479.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.15%)</title><rect x="822.6" y="485" width="1.7" height="15.0" fill="rgb(243,21,14)" rx="2" ry="2" />
<text  x="825.57" y="495.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (2 samples, 0.30%)</title><rect x="921.5" y="501" width="3.5" height="15.0" fill="rgb(212,62,27)" rx="2" ry="2" />
<text  x="924.50" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (5 samples, 0.75%)</title><rect x="677.7" y="485" width="8.9" height="15.0" fill="rgb(252,101,7)" rx="2" ry="2" />
<text  x="680.72" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.15%)</title><rect x="499.3" y="277" width="1.8" height="15.0" fill="rgb(215,214,18)" rx="2" ry="2" />
<text  x="502.31" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.15%)</title><rect x="276.7" y="309" width="1.8" height="15.0" fill="rgb(226,156,14)" rx="2" ry="2" />
<text  x="279.74" y="319.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.45%)</title><rect x="615.9" y="437" width="5.3" height="15.0" fill="rgb(252,102,26)" rx="2" ry="2" />
<text  x="618.90" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).ReceiveOrder (10 samples, 1.50%)</title><rect x="10.0" y="581" width="17.7" height="15.0" fill="rgb(216,113,49)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.30%)</title><rect x="582.3" y="421" width="3.6" height="15.0" fill="rgb(207,186,54)" rx="2" ry="2" />
<text  x="585.34" y="431.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.15%)</title><rect x="691.9" y="469" width="1.7" height="15.0" fill="rgb(245,170,2)" rx="2" ry="2" />
<text  x="694.86" y="479.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.15%)</title><rect x="693.6" y="533" width="1.8" height="15.0" fill="rgb(241,216,19)" rx="2" ry="2" />
<text  x="696.62" y="543.5" ></text>
</g>
<g >
<title>syscall.Read (10 samples, 1.50%)</title><rect x="10.0" y="517" width="17.7" height="15.0" fill="rgb(205,116,34)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next (3 samples, 0.45%)</title><rect x="282.0" y="469" width="5.3" height="15.0" fill="rgb(207,35,41)" rx="2" ry="2" />
<text  x="285.04" y="479.5" ></text>
</g>
<g >
<title>runtime.scang (16 samples, 2.40%)</title><rect x="854.4" y="485" width="28.2" height="15.0" fill="rgb(245,197,15)" rx="2" ry="2" />
<text  x="857.37" y="495.5" >r..</text>
</g>
<g >
<title>crypto/sha256.New (1 samples, 0.15%)</title><rect x="543.5" y="485" width="1.7" height="15.0" fill="rgb(240,136,44)" rx="2" ry="2" />
<text  x="546.47" y="495.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.15%)</title><rect x="880.9" y="437" width="1.7" height="15.0" fill="rgb(243,210,30)" rx="2" ry="2" />
<text  x="883.87" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).VerifySignature (10 samples, 1.50%)</title><rect x="640.6" y="565" width="17.7" height="15.0" fill="rgb(207,37,20)" rx="2" ry="2" />
<text  x="643.63" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.15%)</title><rect x="275.0" y="357" width="1.7" height="15.0" fill="rgb(228,153,25)" rx="2" ry="2" />
<text  x="277.97" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.15%)</title><rect x="269.7" y="213" width="1.7" height="15.0" fill="rgb(212,197,44)" rx="2" ry="2" />
<text  x="272.67" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="269.7" y="437" width="1.7" height="15.0" fill="rgb(229,104,47)" rx="2" ry="2" />
<text  x="272.67" y="447.5" ></text>
</g>
<g >
<title>os.(*File).pwrite (1 samples, 0.15%)</title><rect x="27.7" y="469" width="1.7" height="15.0" fill="rgb(238,210,22)" rx="2" ry="2" />
<text  x="30.66" y="479.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.45%)</title><rect x="22.4" y="373" width="5.3" height="15.0" fill="rgb(222,70,25)" rx="2" ry="2" />
<text  x="25.37" y="383.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (2 samples, 0.30%)</title><rect x="748.4" y="517" width="3.5" height="15.0" fill="rgb(251,168,49)" rx="2" ry="2" />
<text  x="751.38" y="527.5" ></text>
</g>
<g >
<title>syscall.write (4 samples, 0.60%)</title><rect x="262.6" y="437" width="7.1" height="15.0" fill="rgb(247,137,34)" rx="2" ry="2" />
<text  x="265.60" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="716.6" y="501" width="1.8" height="15.0" fill="rgb(246,219,19)" rx="2" ry="2" />
<text  x="719.59" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (9 samples, 1.35%)</title><rect x="824.3" y="517" width="15.9" height="15.0" fill="rgb(214,11,30)" rx="2" ry="2" />
<text  x="827.34" y="527.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.15%)</title><rect x="612.4" y="357" width="1.7" height="15.0" fill="rgb(216,69,30)" rx="2" ry="2" />
<text  x="615.37" y="367.5" ></text>
</g>
<g >
<title>reflect.unsafe_NewArray (1 samples, 0.15%)</title><rect x="33.0" y="373" width="1.7" height="15.0" fill="rgb(237,197,32)" rx="2" ry="2" />
<text  x="35.96" y="383.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (3 samples, 0.45%)</title><rect x="282.0" y="405" width="5.3" height="15.0" fill="rgb(222,150,40)" rx="2" ry="2" />
<text  x="285.04" y="415.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.30%)</title><rect x="275.0" y="469" width="3.5" height="15.0" fill="rgb(230,87,21)" rx="2" ry="2" />
<text  x="277.97" y="479.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (5 samples, 0.75%)</title><rect x="260.8" y="485" width="8.9" height="15.0" fill="rgb(232,107,1)" rx="2" ry="2" />
<text  x="263.84" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.15%)</title><rect x="260.8" y="453" width="1.8" height="15.0" fill="rgb(232,202,12)" rx="2" ry="2" />
<text  x="263.84" y="463.5" ></text>
</g>
<g >
<title>runtime.goexit0 (1 samples, 0.15%)</title><rect x="925.0" y="565" width="1.8" height="15.0" fill="rgb(229,150,37)" rx="2" ry="2" />
<text  x="928.03" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.30%)</title><rect x="290.9" y="501" width="3.5" height="15.0" fill="rgb(216,126,6)" rx="2" ry="2" />
<text  x="293.87" y="511.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.15%)</title><rect x="723.7" y="437" width="1.7" height="15.0" fill="rgb(245,13,37)" rx="2" ry="2" />
<text  x="726.65" y="447.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (3 samples, 0.45%)</title><rect x="517.0" y="405" width="5.3" height="15.0" fill="rgb(239,224,6)" rx="2" ry="2" />
<text  x="519.98" y="415.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.15%)</title><rect x="57.7" y="325" width="1.8" height="15.0" fill="rgb(246,198,1)" rx="2" ry="2" />
<text  x="60.69" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.15%)</title><rect x="289.1" y="485" width="1.8" height="15.0" fill="rgb(241,195,30)" rx="2" ry="2" />
<text  x="292.10" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (2 samples, 0.30%)</title><rect x="287.3" y="517" width="3.6" height="15.0" fill="rgb(242,159,51)" rx="2" ry="2" />
<text  x="290.34" y="527.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.15%)</title><rect x="612.4" y="325" width="1.7" height="15.0" fill="rgb(213,67,42)" rx="2" ry="2" />
<text  x="615.37" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (121 samples, 18.11%)</title><rect x="36.5" y="501" width="213.7" height="15.0" fill="rgb(222,225,29)" rx="2" ry="2" />
<text  x="39.50" y="511.5" >BCDns_0.1/certificateAuthori..</text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (1 samples, 0.15%)</title><rect x="269.7" y="485" width="1.7" height="15.0" fill="rgb(216,202,24)" rx="2" ry="2" />
<text  x="272.67" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (90 samples, 13.47%)</title><rect x="59.5" y="389" width="158.9" height="15.0" fill="rgb(241,89,13)" rx="2" ry="2" />
<text  x="62.46" y="399.5" >math/big.nat.montgom..</text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.15%)</title><rect x="1181.2" y="453" width="1.7" height="15.0" fill="rgb(235,25,50)" rx="2" ry="2" />
<text  x="1184.17" y="463.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (2 samples, 0.30%)</title><rect x="290.9" y="453" width="3.5" height="15.0" fill="rgb(240,34,14)" rx="2" ry="2" />
<text  x="293.87" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="269.7" y="261" width="1.7" height="15.0" fill="rgb(223,111,2)" rx="2" ry="2" />
<text  x="272.67" y="271.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 0.30%)</title><rect x="587.6" y="549" width="3.6" height="15.0" fill="rgb(212,147,42)" rx="2" ry="2" />
<text  x="590.63" y="559.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (1 samples, 0.15%)</title><rect x="626.5" y="533" width="1.8" height="15.0" fill="rgb(254,149,53)" rx="2" ry="2" />
<text  x="629.50" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (2 samples, 0.30%)</title><rect x="623.0" y="533" width="3.5" height="15.0" fill="rgb(239,127,5)" rx="2" ry="2" />
<text  x="625.96" y="543.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.15%)</title><rect x="739.6" y="485" width="1.7" height="15.0" fill="rgb(250,117,40)" rx="2" ry="2" />
<text  x="742.55" y="495.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.15%)</title><rect x="584.1" y="389" width="1.8" height="15.0" fill="rgb(214,53,26)" rx="2" ry="2" />
<text  x="587.10" y="399.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.15%)</title><rect x="879.1" y="373" width="1.8" height="15.0" fill="rgb(216,143,41)" rx="2" ry="2" />
<text  x="882.10" y="383.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.15%)</title><rect x="54.2" y="373" width="1.7" height="15.0" fill="rgb(248,39,51)" rx="2" ry="2" />
<text  x="57.16" y="383.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.15%)</title><rect x="296.2" y="389" width="1.7" height="15.0" fill="rgb(224,68,33)" rx="2" ry="2" />
<text  x="299.17" y="399.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (1 samples, 0.15%)</title><rect x="257.3" y="437" width="1.8" height="15.0" fill="rgb(247,176,36)" rx="2" ry="2" />
<text  x="260.31" y="447.5" ></text>
</g>
<g >
<title>runtime.findrunnable (47 samples, 7.04%)</title><rect x="932.1" y="533" width="83.0" height="15.0" fill="rgb(211,141,31)" rx="2" ry="2" />
<text  x="935.10" y="543.5" >runtime.f..</text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (140 samples, 20.96%)</title><rect x="296.2" y="501" width="247.3" height="15.0" fill="rgb(247,83,9)" rx="2" ry="2" />
<text  x="299.17" y="511.5" >crypto/rsa.SignPKCS1v15</text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.60%)</title><rect x="1015.1" y="485" width="7.1" height="15.0" fill="rgb(222,227,15)" rx="2" ry="2" />
<text  x="1018.12" y="495.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (10 samples, 1.50%)</title><rect x="640.6" y="501" width="17.7" height="15.0" fill="rgb(234,100,53)" rx="2" ry="2" />
<text  x="643.63" y="511.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.15%)</title><rect x="296.2" y="437" width="1.7" height="15.0" fill="rgb(206,180,44)" rx="2" ry="2" />
<text  x="299.17" y="447.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (4 samples, 0.60%)</title><rect x="509.9" y="405" width="7.1" height="15.0" fill="rgb(223,112,31)" rx="2" ry="2" />
<text  x="512.91" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="275.0" y="341" width="1.7" height="15.0" fill="rgb(211,210,0)" rx="2" ry="2" />
<text  x="277.97" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposal (152 samples, 22.75%)</title><rect x="282.0" y="549" width="268.5" height="15.0" fill="rgb(220,46,37)" rx="2" ry="2" />
<text  x="285.04" y="559.5" >BCDns_0.1/messages.NewProposal</text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.15%)</title><rect x="255.5" y="421" width="1.8" height="15.0" fill="rgb(212,119,53)" rx="2" ry="2" />
<text  x="258.54" y="431.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.15%)</title><rect x="656.5" y="437" width="1.8" height="15.0" fill="rgb(229,23,5)" rx="2" ry="2" />
<text  x="659.53" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.15%)</title><rect x="283.8" y="261" width="1.8" height="15.0" fill="rgb(228,20,14)" rx="2" ry="2" />
<text  x="286.80" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="271.4" y="405" width="1.8" height="15.0" fill="rgb(245,163,23)" rx="2" ry="2" />
<text  x="274.44" y="415.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (5 samples, 0.75%)</title><rect x="578.8" y="501" width="8.8" height="15.0" fill="rgb(223,148,25)" rx="2" ry="2" />
<text  x="581.80" y="511.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.15%)</title><rect x="582.3" y="389" width="1.8" height="15.0" fill="rgb(237,42,20)" rx="2" ry="2" />
<text  x="585.34" y="399.5" ></text>
</g>
<g >
<title>runtime.sweepone (5 samples, 0.75%)</title><rect x="843.8" y="565" width="8.8" height="15.0" fill="rgb(252,125,30)" rx="2" ry="2" />
<text  x="846.77" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="718.4" y="549" width="1.7" height="15.0" fill="rgb(219,207,34)" rx="2" ry="2" />
<text  x="721.35" y="559.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (1 samples, 0.15%)</title><rect x="543.5" y="501" width="1.7" height="15.0" fill="rgb(205,96,44)" rx="2" ry="2" />
<text  x="546.47" y="511.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.15%)</title><rect x="259.1" y="485" width="1.7" height="15.0" fill="rgb(246,210,10)" rx="2" ry="2" />
<text  x="262.07" y="495.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.15%)</title><rect x="812.0" y="469" width="1.7" height="15.0" fill="rgb(207,102,52)" rx="2" ry="2" />
<text  x="814.98" y="479.5" ></text>
</g>
<g >
<title>runtime.step (3 samples, 0.45%)</title><rect x="859.7" y="405" width="5.3" height="15.0" fill="rgb(240,206,45)" rx="2" ry="2" />
<text  x="862.67" y="415.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.15%)</title><rect x="259.1" y="469" width="1.7" height="15.0" fill="rgb(233,184,46)" rx="2" ry="2" />
<text  x="262.07" y="479.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.15%)</title><rect x="737.8" y="485" width="1.8" height="15.0" fill="rgb(250,15,46)" rx="2" ry="2" />
<text  x="740.78" y="495.5" ></text>
</g>
<g >
<title>reflect.deepValueEqual (2 samples, 0.30%)</title><rect x="271.4" y="501" width="3.6" height="15.0" fill="rgb(228,212,44)" rx="2" ry="2" />
<text  x="274.44" y="511.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="695.4" y="549" width="1.8" height="15.0" fill="rgb(220,57,32)" rx="2" ry="2" />
<text  x="698.39" y="559.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.15%)</title><rect x="707.8" y="549" width="1.7" height="15.0" fill="rgb(242,205,36)" rx="2" ry="2" />
<text  x="710.75" y="559.5" ></text>
</g>
<g >
<title>runtime.notesleep (12 samples, 1.80%)</title><rect x="993.9" y="501" width="21.2" height="15.0" fill="rgb(215,164,20)" rx="2" ry="2" />
<text  x="996.92" y="511.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.60%)</title><rect x="815.5" y="469" width="7.1" height="15.0" fill="rgb(244,16,24)" rx="2" ry="2" />
<text  x="818.51" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (92 samples, 13.77%)</title><rect x="55.9" y="405" width="162.5" height="15.0" fill="rgb(220,189,1)" rx="2" ry="2" />
<text  x="58.93" y="415.5" >math/big.nat.expNNMo..</text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.15%)</title><rect x="879.1" y="405" width="1.8" height="15.0" fill="rgb(229,100,49)" rx="2" ry="2" />
<text  x="882.10" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="631.8" y="453" width="3.5" height="15.0" fill="rgb(223,91,30)" rx="2" ry="2" />
<text  x="634.80" y="463.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.15%)</title><rect x="577.0" y="453" width="1.8" height="15.0" fill="rgb(215,120,51)" rx="2" ry="2" />
<text  x="580.04" y="463.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.15%)</title><rect x="638.9" y="517" width="1.7" height="15.0" fill="rgb(225,208,19)" rx="2" ry="2" />
<text  x="641.86" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.30%)</title><rect x="31.2" y="453" width="3.5" height="15.0" fill="rgb(216,158,20)" rx="2" ry="2" />
<text  x="34.20" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.15%)</title><rect x="545.2" y="485" width="1.8" height="15.0" fill="rgb(220,221,9)" rx="2" ry="2" />
<text  x="548.24" y="495.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.15%)</title><rect x="1022.2" y="485" width="1.8" height="15.0" fill="rgb(215,98,27)" rx="2" ry="2" />
<text  x="1025.19" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="683.0" y="405" width="1.8" height="15.0" fill="rgb(242,137,14)" rx="2" ry="2" />
<text  x="686.02" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.BytesToInt (2 samples, 0.30%)</title><rect x="714.8" y="549" width="3.6" height="15.0" fill="rgb(236,16,37)" rx="2" ry="2" />
<text  x="717.82" y="559.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (33 samples, 4.94%)</title><rect x="755.4" y="549" width="58.3" height="15.0" fill="rgb(228,55,41)" rx="2" ry="2" />
<text  x="758.45" y="559.5" >net.(*..</text>
</g>
<g >
<title>math/big.nat.divLarge (11 samples, 1.65%)</title><rect x="522.3" y="405" width="19.4" height="15.0" fill="rgb(236,50,51)" rx="2" ry="2" />
<text  x="525.28" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.30%)</title><rect x="499.3" y="357" width="3.5" height="15.0" fill="rgb(217,226,47)" rx="2" ry="2" />
<text  x="502.31" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.UnpackMessage (20 samples, 2.99%)</title><rect x="720.1" y="565" width="35.3" height="15.0" fill="rgb(230,69,48)" rx="2" ry="2" />
<text  x="723.12" y="575.5" >BC..</text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.15%)</title><rect x="624.7" y="453" width="1.8" height="15.0" fill="rgb(251,174,37)" rx="2" ry="2" />
<text  x="627.73" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.NewBlock (1 samples, 0.15%)</title><rect x="278.5" y="533" width="1.8" height="15.0" fill="rgb(227,99,12)" rx="2" ry="2" />
<text  x="281.50" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Exits (1 samples, 0.15%)</title><rect x="591.2" y="533" width="1.7" height="15.0" fill="rgb(217,130,53)" rx="2" ry="2" />
<text  x="594.17" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (11 samples, 1.65%)</title><rect x="721.9" y="517" width="19.4" height="15.0" fill="rgb(242,115,18)" rx="2" ry="2" />
<text  x="724.89" y="527.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.15%)</title><rect x="882.6" y="485" width="1.8" height="15.0" fill="rgb(253,170,2)" rx="2" ry="2" />
<text  x="885.63" y="495.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (2 samples, 0.30%)</title><rect x="275.0" y="517" width="3.5" height="15.0" fill="rgb(228,83,49)" rx="2" ry="2" />
<text  x="277.97" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.15%)</title><rect x="275.0" y="325" width="1.7" height="15.0" fill="rgb(254,92,5)" rx="2" ry="2" />
<text  x="277.97" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (16 samples, 2.40%)</title><rect x="594.7" y="469" width="28.3" height="15.0" fill="rgb(217,133,1)" rx="2" ry="2" />
<text  x="597.70" y="479.5" >m..</text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.15%)</title><rect x="299.7" y="405" width="1.8" height="15.0" fill="rgb(220,189,32)" rx="2" ry="2" />
<text  x="302.70" y="415.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.15%)</title><rect x="38.3" y="341" width="1.7" height="15.0" fill="rgb(252,12,44)" rx="2" ry="2" />
<text  x="41.26" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (3 samples, 0.45%)</title><rect x="282.0" y="501" width="5.3" height="15.0" fill="rgb(247,95,31)" rx="2" ry="2" />
<text  x="285.04" y="511.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.30%)</title><rect x="870.3" y="373" width="3.5" height="15.0" fill="rgb(210,192,20)" rx="2" ry="2" />
<text  x="873.27" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.30%)</title><rect x="31.2" y="405" width="3.5" height="15.0" fill="rgb(217,7,7)" rx="2" ry="2" />
<text  x="34.20" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="276.7" y="325" width="1.8" height="15.0" fill="rgb(232,32,47)" rx="2" ry="2" />
<text  x="279.74" y="335.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.15%)</title><rect x="1181.2" y="549" width="1.7" height="15.0" fill="rgb(211,39,43)" rx="2" ry="2" />
<text  x="1184.17" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.15%)</title><rect x="684.8" y="389" width="1.8" height="15.0" fill="rgb(237,215,36)" rx="2" ry="2" />
<text  x="687.79" y="399.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (10 samples, 1.50%)</title><rect x="640.6" y="517" width="17.7" height="15.0" fill="rgb(233,52,48)" rx="2" ry="2" />
<text  x="643.63" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.15%)</title><rect x="716.6" y="517" width="1.8" height="15.0" fill="rgb(248,157,22)" rx="2" ry="2" />
<text  x="719.59" y="527.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.15%)</title><rect x="269.7" y="277" width="1.7" height="15.0" fill="rgb(220,210,4)" rx="2" ry="2" />
<text  x="272.67" y="287.5" ></text>
</g>
<g >
<title>time.NewTimer (1 samples, 0.15%)</title><rect x="711.3" y="549" width="1.8" height="15.0" fill="rgb(235,216,48)" rx="2" ry="2" />
<text  x="714.29" y="559.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.45%)</title><rect x="504.6" y="405" width="5.3" height="15.0" fill="rgb(238,220,40)" rx="2" ry="2" />
<text  x="507.61" y="415.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumMethod (1 samples, 0.15%)</title><rect x="686.6" y="485" width="1.7" height="15.0" fill="rgb(230,178,48)" rx="2" ry="2" />
<text  x="689.56" y="495.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.15%)</title><rect x="940.9" y="517" width="1.8" height="15.0" fill="rgb(214,221,39)" rx="2" ry="2" />
<text  x="943.93" y="527.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.15%)</title><rect x="882.6" y="501" width="1.8" height="15.0" fill="rgb(215,22,27)" rx="2" ry="2" />
<text  x="885.63" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.15%)</title><rect x="630.0" y="453" width="1.8" height="15.0" fill="rgb(232,122,44)" rx="2" ry="2" />
<text  x="633.03" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (17 samples, 2.54%)</title><rect x="658.3" y="549" width="30.0" height="15.0" fill="rgb(250,175,44)" rx="2" ry="2" />
<text  x="661.29" y="559.5" >en..</text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.30%)</title><rect x="607.1" y="421" width="3.5" height="15.0" fill="rgb(212,184,14)" rx="2" ry="2" />
<text  x="610.07" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).Run (385 samples, 57.63%)</title><rect x="27.7" y="581" width="680.1" height="15.0" fill="rgb(207,153,27)" rx="2" ry="2" />
<text  x="30.66" y="591.5" >BCDns_0.1/consensusMy/service.(*Consensus).Run</text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.15%)</title><rect x="879.1" y="389" width="1.8" height="15.0" fill="rgb(249,45,31)" rx="2" ry="2" />
<text  x="882.10" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (4 samples, 0.60%)</title><rect x="628.3" y="501" width="7.0" height="15.0" fill="rgb(217,202,30)" rx="2" ry="2" />
<text  x="631.26" y="511.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.30%)</title><rect x="1177.6" y="437" width="3.6" height="15.0" fill="rgb(213,156,37)" rx="2" ry="2" />
<text  x="1180.63" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Sign (142 samples, 21.26%)</title><rect x="296.2" y="533" width="250.8" height="15.0" fill="rgb(242,69,39)" rx="2" ry="2" />
<text  x="299.17" y="543.5" >BCDns_0.1/messages.(*ProposalMess..</text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (2 samples, 0.30%)</title><rect x="827.9" y="437" width="3.5" height="15.0" fill="rgb(248,132,39)" rx="2" ry="2" />
<text  x="830.87" y="447.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.15%)</title><rect x="319.1" y="325" width="1.8" height="15.0" fill="rgb(254,152,32)" rx="2" ry="2" />
<text  x="322.13" y="335.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (3 samples, 0.45%)</title><rect x="22.4" y="421" width="5.3" height="15.0" fill="rgb(222,14,30)" rx="2" ry="2" />
<text  x="25.37" y="431.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.15%)</title><rect x="216.7" y="373" width="1.7" height="15.0" fill="rgb(249,207,1)" rx="2" ry="2" />
<text  x="219.68" y="383.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (7 samples, 1.05%)</title><rect x="509.9" y="437" width="12.4" height="15.0" fill="rgb(214,49,5)" rx="2" ry="2" />
<text  x="512.91" y="447.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.30%)</title><rect x="926.8" y="533" width="3.5" height="15.0" fill="rgb(234,19,1)" rx="2" ry="2" />
<text  x="929.80" y="543.5" ></text>
</g>
<g >
<title>runtime.notetsleep (12 samples, 1.80%)</title><rect x="1039.9" y="533" width="21.1" height="15.0" fill="rgb(244,65,6)" rx="2" ry="2" />
<text  x="1042.85" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).MineBlock (3 samples, 0.45%)</title><rect x="275.0" y="549" width="5.3" height="15.0" fill="rgb(234,151,39)" rx="2" ry="2" />
<text  x="277.97" y="559.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.15%)</title><rect x="697.2" y="485" width="1.7" height="15.0" fill="rgb(236,19,52)" rx="2" ry="2" />
<text  x="700.16" y="495.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.30%)</title><rect x="1177.6" y="469" width="3.6" height="15.0" fill="rgb(238,198,5)" rx="2" ry="2" />
<text  x="1180.63" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.30%)</title><rect x="1177.6" y="533" width="3.6" height="15.0" fill="rgb(242,84,14)" rx="2" ry="2" />
<text  x="1180.63" y="543.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.15%)</title><rect x="252.0" y="421" width="1.8" height="15.0" fill="rgb(235,6,44)" rx="2" ry="2" />
<text  x="255.01" y="431.5" ></text>
</g>
<g >
<title>all (668 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(236,222,32)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (2 samples, 0.30%)</title><rect x="827.9" y="453" width="3.5" height="15.0" fill="rgb(224,150,10)" rx="2" ry="2" />
<text  x="830.87" y="463.5" ></text>
</g>
<g >
<title>runtime.stopm (13 samples, 1.95%)</title><rect x="992.2" y="517" width="22.9" height="15.0" fill="rgb(213,5,45)" rx="2" ry="2" />
<text  x="995.16" y="527.5" >r..</text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.15%)</title><rect x="626.5" y="485" width="1.8" height="15.0" fill="rgb(214,174,39)" rx="2" ry="2" />
<text  x="629.50" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock (2 samples, 0.30%)</title><rect x="27.7" y="549" width="3.5" height="15.0" fill="rgb(227,1,50)" rx="2" ry="2" />
<text  x="30.66" y="559.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.15%)</title><rect x="282.0" y="261" width="1.8" height="15.0" fill="rgb(238,30,17)" rx="2" ry="2" />
<text  x="285.04" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.getDigest2 (1 samples, 0.15%)</title><rect x="592.9" y="517" width="1.8" height="15.0" fill="rgb(252,17,27)" rx="2" ry="2" />
<text  x="595.93" y="527.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.15%)</title><rect x="822.6" y="373" width="1.7" height="15.0" fill="rgb(253,129,44)" rx="2" ry="2" />
<text  x="825.57" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.30%)</title><rect x="275.0" y="389" width="3.5" height="15.0" fill="rgb(242,78,51)" rx="2" ry="2" />
<text  x="277.97" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (1 samples, 0.15%)</title><rect x="850.8" y="533" width="1.8" height="15.0" fill="rgb(252,101,13)" rx="2" ry="2" />
<text  x="853.84" y="543.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.60%)</title><rect x="815.5" y="453" width="7.1" height="15.0" fill="rgb(228,101,0)" rx="2" ry="2" />
<text  x="818.51" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (1 samples, 0.15%)</title><rect x="577.0" y="533" width="1.8" height="15.0" fill="rgb(238,205,23)" rx="2" ry="2" />
<text  x="580.04" y="543.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (8 samples, 1.20%)</title><rect x="865.0" y="421" width="14.1" height="15.0" fill="rgb(216,154,4)" rx="2" ry="2" />
<text  x="867.97" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.45%)</title><rect x="22.4" y="437" width="5.3" height="15.0" fill="rgb(213,68,17)" rx="2" ry="2" />
<text  x="25.37" y="447.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.15%)</title><rect x="723.7" y="405" width="1.7" height="15.0" fill="rgb(251,65,23)" rx="2" ry="2" />
<text  x="726.65" y="415.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.15%)</title><rect x="34.7" y="469" width="1.8" height="15.0" fill="rgb(225,146,8)" rx="2" ry="2" />
<text  x="37.73" y="479.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.15%)</title><rect x="252.0" y="437" width="1.8" height="15.0" fill="rgb(207,224,47)" rx="2" ry="2" />
<text  x="255.01" y="447.5" ></text>
</g>
<g >
<title>syscall.Syscall (29 samples, 4.34%)</title><rect x="762.5" y="485" width="51.2" height="15.0" fill="rgb(247,62,43)" rx="2" ry="2" />
<text  x="765.51" y="495.5" >sysca..</text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.15%)</title><rect x="1181.2" y="533" width="1.7" height="15.0" fill="rgb(236,41,7)" rx="2" ry="2" />
<text  x="1184.17" y="543.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.15%)</title><rect x="723.7" y="453" width="1.7" height="15.0" fill="rgb(214,7,38)" rx="2" ry="2" />
<text  x="726.65" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="269.7" y="405" width="1.7" height="15.0" fill="rgb(234,181,40)" rx="2" ry="2" />
<text  x="272.67" y="415.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.15%)</title><rect x="29.4" y="373" width="1.8" height="15.0" fill="rgb(250,171,47)" rx="2" ry="2" />
<text  x="32.43" y="383.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.15%)</title><rect x="804.9" y="437" width="1.8" height="15.0" fill="rgb(230,171,38)" rx="2" ry="2" />
<text  x="807.91" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.30%)</title><rect x="218.4" y="405" width="3.6" height="15.0" fill="rgb(218,128,52)" rx="2" ry="2" />
<text  x="221.44" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (32 samples, 4.79%)</title><rect x="757.2" y="533" width="56.5" height="15.0" fill="rgb(240,90,49)" rx="2" ry="2" />
<text  x="760.22" y="543.5" >inter..</text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.15%)</title><rect x="709.5" y="549" width="1.8" height="15.0" fill="rgb(229,65,28)" rx="2" ry="2" />
<text  x="712.52" y="559.5" ></text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.45%)</title><rect x="873.8" y="405" width="5.3" height="15.0" fill="rgb(220,127,18)" rx="2" ry="2" />
<text  x="876.80" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (107 samples, 16.02%)</title><rect x="315.6" y="421" width="189.0" height="15.0" fill="rgb(215,99,41)" rx="2" ry="2" />
<text  x="318.60" y="431.5" >math/big.nat.expNNMontgo..</text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (1 samples, 0.15%)</title><rect x="269.7" y="533" width="1.7" height="15.0" fill="rgb(239,132,10)" rx="2" ry="2" />
<text  x="272.67" y="543.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.15%)</title><rect x="983.3" y="517" width="1.8" height="15.0" fill="rgb(210,180,19)" rx="2" ry="2" />
<text  x="986.32" y="527.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.15%)</title><rect x="822.6" y="309" width="1.7" height="15.0" fill="rgb(241,77,8)" rx="2" ry="2" />
<text  x="825.57" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.Map (1 samples, 0.15%)</title><rect x="278.5" y="501" width="1.8" height="15.0" fill="rgb(215,49,41)" rx="2" ry="2" />
<text  x="281.50" y="511.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.15%)</title><rect x="709.5" y="437" width="1.8" height="15.0" fill="rgb(244,42,41)" rx="2" ry="2" />
<text  x="712.52" y="447.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.15%)</title><rect x="585.9" y="437" width="1.7" height="15.0" fill="rgb(211,110,37)" rx="2" ry="2" />
<text  x="588.87" y="447.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.15%)</title><rect x="879.1" y="437" width="1.8" height="15.0" fill="rgb(248,3,21)" rx="2" ry="2" />
<text  x="882.10" y="447.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.15%)</title><rect x="684.8" y="469" width="1.8" height="15.0" fill="rgb(244,228,11)" rx="2" ry="2" />
<text  x="687.79" y="479.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.60%)</title><rect x="1015.1" y="453" width="7.1" height="15.0" fill="rgb(236,121,10)" rx="2" ry="2" />
<text  x="1018.12" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (10 samples, 1.50%)</title><rect x="10.0" y="533" width="17.7" height="15.0" fill="rgb(209,57,2)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>time.After (1 samples, 0.15%)</title><rect x="711.3" y="565" width="1.8" height="15.0" fill="rgb(217,143,48)" rx="2" ry="2" />
<text  x="714.29" y="575.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (4 samples, 0.60%)</title><rect x="527.6" y="389" width="7.0" height="15.0" fill="rgb(251,211,51)" rx="2" ry="2" />
<text  x="530.57" y="399.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.15%)</title><rect x="822.6" y="469" width="1.7" height="15.0" fill="rgb(228,105,9)" rx="2" ry="2" />
<text  x="825.57" y="479.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.15%)</title><rect x="252.0" y="469" width="1.8" height="15.0" fill="rgb(252,17,43)" rx="2" ry="2" />
<text  x="255.01" y="479.5" ></text>
</g>
<g >
<title>reflect.directlyAssignable (1 samples, 0.15%)</title><rect x="580.6" y="421" width="1.7" height="15.0" fill="rgb(244,106,15)" rx="2" ry="2" />
<text  x="583.57" y="431.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (12 samples, 1.80%)</title><rect x="522.3" y="469" width="21.2" height="15.0" fill="rgb(241,132,25)" rx="2" ry="2" />
<text  x="525.28" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.30%)</title><rect x="847.3" y="517" width="3.5" height="15.0" fill="rgb(223,184,0)" rx="2" ry="2" />
<text  x="850.31" y="527.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (9 samples, 1.35%)</title><rect x="234.3" y="437" width="15.9" height="15.0" fill="rgb(234,198,23)" rx="2" ry="2" />
<text  x="237.34" y="447.5" ></text>
</g>
<g >
<title>runtime.scanstack (16 samples, 2.40%)</title><rect x="854.4" y="469" width="28.2" height="15.0" fill="rgb(221,178,39)" rx="2" ry="2" />
<text  x="857.37" y="479.5" >r..</text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.15%)</title><rect x="849.1" y="437" width="1.7" height="15.0" fill="rgb(218,59,8)" rx="2" ry="2" />
<text  x="852.07" y="447.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (9 samples, 1.35%)</title><rect x="234.3" y="453" width="15.9" height="15.0" fill="rgb(243,193,43)" rx="2" ry="2" />
<text  x="237.34" y="463.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.15%)</title><rect x="257.3" y="453" width="1.8" height="15.0" fill="rgb(245,218,1)" rx="2" ry="2" />
<text  x="260.31" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (101 samples, 15.12%)</title><rect x="40.0" y="421" width="178.4" height="15.0" fill="rgb(233,28,22)" rx="2" ry="2" />
<text  x="43.03" y="431.5" >math/big.nat.expNN</text>
</g>
<g >
<title>runtime.evacuate (1 samples, 0.15%)</title><rect x="273.2" y="421" width="1.8" height="15.0" fill="rgb(237,59,11)" rx="2" ry="2" />
<text  x="276.20" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (5 samples, 0.75%)</title><rect x="287.3" y="533" width="8.9" height="15.0" fill="rgb(249,103,25)" rx="2" ry="2" />
<text  x="290.34" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.15%)</title><rect x="499.3" y="245" width="1.8" height="15.0" fill="rgb(237,229,49)" rx="2" ry="2" />
<text  x="502.31" y="255.5" ></text>
</g>
<g >
<title>bytes.NewBuffer (1 samples, 0.15%)</title><rect x="714.8" y="533" width="1.8" height="15.0" fill="rgb(222,123,52)" rx="2" ry="2" />
<text  x="717.82" y="543.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.15%)</title><rect x="577.0" y="517" width="1.8" height="15.0" fill="rgb(230,219,21)" rx="2" ry="2" />
<text  x="580.04" y="527.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (1 samples, 0.15%)</title><rect x="280.3" y="469" width="1.7" height="15.0" fill="rgb(212,194,21)" rx="2" ry="2" />
<text  x="283.27" y="479.5" ></text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.15%)</title><rect x="709.5" y="453" width="1.8" height="15.0" fill="rgb(212,175,20)" rx="2" ry="2" />
<text  x="712.52" y="463.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.15%)</title><rect x="319.1" y="373" width="1.8" height="15.0" fill="rgb(231,45,6)" rx="2" ry="2" />
<text  x="322.13" y="383.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (2 samples, 0.30%)</title><rect x="1177.6" y="549" width="3.6" height="15.0" fill="rgb(227,6,1)" rx="2" ry="2" />
<text  x="1180.63" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2 samples, 0.30%)</title><rect x="847.3" y="485" width="3.5" height="15.0" fill="rgb(237,141,32)" rx="2" ry="2" />
<text  x="850.31" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.15%)</title><rect x="269.7" y="309" width="1.7" height="15.0" fill="rgb(245,106,40)" rx="2" ry="2" />
<text  x="272.67" y="319.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (20 samples, 2.99%)</title><rect x="720.1" y="549" width="35.3" height="15.0" fill="rgb(239,82,35)" rx="2" ry="2" />
<text  x="723.12" y="559.5" >en..</text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.15%)</title><rect x="287.3" y="485" width="1.8" height="15.0" fill="rgb(206,207,23)" rx="2" ry="2" />
<text  x="290.34" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (17 samples, 2.54%)</title><rect x="658.3" y="533" width="30.0" height="15.0" fill="rgb(234,180,18)" rx="2" ry="2" />
<text  x="661.29" y="543.5" >en..</text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.15%)</title><rect x="592.9" y="453" width="1.8" height="15.0" fill="rgb(210,204,5)" rx="2" ry="2" />
<text  x="595.93" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (2 samples, 0.30%)</title><rect x="698.9" y="501" width="3.6" height="15.0" fill="rgb(234,226,26)" rx="2" ry="2" />
<text  x="701.92" y="511.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.15%)</title><rect x="545.2" y="437" width="1.8" height="15.0" fill="rgb(218,106,42)" rx="2" ry="2" />
<text  x="548.24" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.15%)</title><rect x="612.4" y="437" width="1.7" height="15.0" fill="rgb(237,10,4)" rx="2" ry="2" />
<text  x="615.37" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.15%)</title><rect x="269.7" y="133" width="1.7" height="15.0" fill="rgb(252,30,18)" rx="2" ry="2" />
<text  x="272.67" y="143.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.15%)</title><rect x="667.1" y="437" width="1.8" height="15.0" fill="rgb(208,10,10)" rx="2" ry="2" />
<text  x="670.13" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="679.5" y="469" width="1.8" height="15.0" fill="rgb(209,151,48)" rx="2" ry="2" />
<text  x="682.49" y="479.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.15%)</title><rect x="879.1" y="341" width="1.8" height="15.0" fill="rgb(205,26,35)" rx="2" ry="2" />
<text  x="882.10" y="351.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (7 samples, 1.05%)</title><rect x="1177.6" y="565" width="12.4" height="15.0" fill="rgb(235,144,10)" rx="2" ry="2" />
<text  x="1180.63" y="575.5" ></text>
</g>
<g >
<title>runtime.deferprocStack (1 samples, 0.15%)</title><rect x="760.7" y="517" width="1.8" height="15.0" fill="rgb(208,81,37)" rx="2" ry="2" />
<text  x="763.75" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.div (7 samples, 1.05%)</title><rect x="303.2" y="421" width="12.4" height="15.0" fill="rgb(226,44,28)" rx="2" ry="2" />
<text  x="306.23" y="431.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (3 samples, 0.45%)</title><rect x="48.9" y="373" width="5.3" height="15.0" fill="rgb(212,105,16)" rx="2" ry="2" />
<text  x="51.86" y="383.5" ></text>
</g>
<g >
<title>os.(*File).write (2 samples, 0.30%)</title><rect x="698.9" y="517" width="3.6" height="15.0" fill="rgb(209,17,48)" rx="2" ry="2" />
<text  x="701.92" y="527.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.15%)</title><rect x="319.1" y="341" width="1.8" height="15.0" fill="rgb(230,43,34)" rx="2" ry="2" />
<text  x="322.13" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (1 samples, 0.15%)</title><rect x="269.7" y="501" width="1.7" height="15.0" fill="rgb(248,21,24)" rx="2" ry="2" />
<text  x="272.67" y="511.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.60%)</title><rect x="815.5" y="501" width="7.1" height="15.0" fill="rgb(211,137,10)" rx="2" ry="2" />
<text  x="818.51" y="511.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.15%)</title><rect x="260.8" y="437" width="1.8" height="15.0" fill="rgb(238,134,33)" rx="2" ry="2" />
<text  x="263.84" y="447.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.15%)</title><rect x="676.0" y="469" width="1.7" height="15.0" fill="rgb(227,142,47)" rx="2" ry="2" />
<text  x="678.96" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.15%)</title><rect x="280.3" y="533" width="1.7" height="15.0" fill="rgb(252,41,51)" rx="2" ry="2" />
<text  x="283.27" y="543.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fat (1 samples, 0.15%)</title><rect x="591.2" y="517" width="1.7" height="15.0" fill="rgb(232,165,10)" rx="2" ry="2" />
<text  x="594.17" y="527.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.15%)</title><rect x="879.1" y="421" width="1.8" height="15.0" fill="rgb(254,0,52)" rx="2" ry="2" />
<text  x="882.10" y="431.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (10 samples, 1.50%)</title><rect x="640.6" y="533" width="17.7" height="15.0" fill="rgb(252,157,9)" rx="2" ry="2" />
<text  x="643.63" y="543.5" ></text>
</g>
<g >
<title>reflect.unpackEface (1 samples, 0.15%)</title><rect x="741.3" y="501" width="1.8" height="15.0" fill="rgb(207,120,27)" rx="2" ry="2" />
<text  x="744.32" y="511.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.30%)</title><rect x="290.9" y="517" width="3.5" height="15.0" fill="rgb(231,132,49)" rx="2" ry="2" />
<text  x="293.87" y="527.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.15%)</title><rect x="638.9" y="533" width="1.7" height="15.0" fill="rgb(238,92,48)" rx="2" ry="2" />
<text  x="641.86" y="543.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (3 samples, 0.45%)</title><rect x="859.7" y="437" width="5.3" height="15.0" fill="rgb(225,155,7)" rx="2" ry="2" />
<text  x="862.67" y="447.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (1 samples, 0.15%)</title><rect x="723.7" y="421" width="1.7" height="15.0" fill="rgb(241,137,6)" rx="2" ry="2" />
<text  x="726.65" y="431.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (1 samples, 0.15%)</title><rect x="866.7" y="405" width="1.8" height="15.0" fill="rgb(246,11,26)" rx="2" ry="2" />
<text  x="869.74" y="415.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.15%)</title><rect x="822.6" y="389" width="1.7" height="15.0" fill="rgb(213,145,28)" rx="2" ry="2" />
<text  x="825.57" y="399.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.45%)</title><rect x="944.5" y="517" width="5.3" height="15.0" fill="rgb(222,71,20)" rx="2" ry="2" />
<text  x="947.46" y="527.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (8 samples, 1.20%)</title><rect x="865.0" y="437" width="14.1" height="15.0" fill="rgb(214,131,21)" rx="2" ry="2" />
<text  x="867.97" y="447.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.15%)</title><rect x="739.6" y="469" width="1.7" height="15.0" fill="rgb(238,97,49)" rx="2" ry="2" />
<text  x="742.55" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.15%)</title><rect x="269.7" y="357" width="1.7" height="15.0" fill="rgb(252,89,32)" rx="2" ry="2" />
<text  x="272.67" y="367.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeLocked (1 samples, 0.15%)</title><rect x="29.4" y="501" width="1.8" height="15.0" fill="rgb(224,54,13)" rx="2" ry="2" />
<text  x="32.43" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (13 samples, 1.95%)</title><rect x="720.1" y="533" width="23.0" height="15.0" fill="rgb(208,202,24)" rx="2" ry="2" />
<text  x="723.12" y="543.5" >e..</text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.15%)</title><rect x="287.3" y="453" width="1.8" height="15.0" fill="rgb(226,66,41)" rx="2" ry="2" />
<text  x="290.34" y="463.5" ></text>
</g>
<g >
<title>fmt.Fprintf (3 samples, 0.45%)</title><rect x="697.2" y="549" width="5.3" height="15.0" fill="rgb(233,149,40)" rx="2" ry="2" />
<text  x="700.16" y="559.5" ></text>
</g>
<g >
<title>runtime.mstart (79 samples, 11.83%)</title><rect x="1027.5" y="581" width="139.5" height="15.0" fill="rgb(211,205,47)" rx="2" ry="2" />
<text  x="1030.49" y="591.5" >runtime.mstart</text>
</g>
<g >
<title>net.(*conn).Read (10 samples, 1.50%)</title><rect x="10.0" y="565" width="17.7" height="15.0" fill="rgb(227,203,53)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.30%)</title><rect x="1036.3" y="533" width="3.6" height="15.0" fill="rgb(253,44,34)" rx="2" ry="2" />
<text  x="1039.32" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.mul (2 samples, 0.30%)</title><rect x="518.7" y="373" width="3.6" height="15.0" fill="rgb(226,186,32)" rx="2" ry="2" />
<text  x="521.74" y="383.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.15%)</title><rect x="271.4" y="421" width="1.8" height="15.0" fill="rgb(226,93,9)" rx="2" ry="2" />
<text  x="274.44" y="431.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.15%)</title><rect x="252.0" y="453" width="1.8" height="15.0" fill="rgb(242,115,44)" rx="2" ry="2" />
<text  x="255.01" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="612.4" y="405" width="1.7" height="15.0" fill="rgb(254,119,0)" rx="2" ry="2" />
<text  x="615.37" y="415.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (8 samples, 1.20%)</title><rect x="826.1" y="501" width="14.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="829.11" y="511.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.15%)</title><rect x="297.9" y="373" width="1.8" height="15.0" fill="rgb(229,21,25)" rx="2" ry="2" />
<text  x="300.93" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="275.0" y="373" width="1.7" height="15.0" fill="rgb(253,95,33)" rx="2" ry="2" />
<text  x="277.97" y="383.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.15%)</title><rect x="297.9" y="405" width="1.8" height="15.0" fill="rgb(208,122,18)" rx="2" ry="2" />
<text  x="300.93" y="415.5" ></text>
</g>
<g >
<title>runtime.selectgo (2 samples, 0.30%)</title><rect x="704.2" y="565" width="3.6" height="15.0" fill="rgb(238,210,31)" rx="2" ry="2" />
<text  x="707.22" y="575.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Tx).write (1 samples, 0.15%)</title><rect x="27.7" y="501" width="1.7" height="15.0" fill="rgb(238,121,26)" rx="2" ry="2" />
<text  x="30.66" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (5 samples, 0.75%)</title><rect x="578.8" y="533" width="8.8" height="15.0" fill="rgb(248,106,8)" rx="2" ry="2" />
<text  x="581.80" y="543.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.45%)</title><rect x="806.7" y="373" width="5.3" height="15.0" fill="rgb(229,88,34)" rx="2" ry="2" />
<text  x="809.68" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.30%)</title><rect x="499.3" y="309" width="3.5" height="15.0" fill="rgb(206,117,7)" rx="2" ry="2" />
<text  x="502.31" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.15%)</title><rect x="684.8" y="421" width="1.8" height="15.0" fill="rgb(222,227,18)" rx="2" ry="2" />
<text  x="687.79" y="431.5" ></text>
</g>
<g >
<title>crypto/internal/randutil.MaybeReadByte (1 samples, 0.15%)</title><rect x="296.2" y="453" width="1.7" height="15.0" fill="rgb(236,34,14)" rx="2" ry="2" />
<text  x="299.17" y="463.5" ></text>
</g>
<g >
<title>runtime.chansend1 (5 samples, 0.75%)</title><rect x="813.7" y="565" width="8.9" height="15.0" fill="rgb(234,20,54)" rx="2" ry="2" />
<text  x="816.74" y="575.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (140 samples, 20.96%)</title><rect x="296.2" y="485" width="247.3" height="15.0" fill="rgb(234,215,14)" rx="2" ry="2" />
<text  x="299.17" y="495.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (2 samples, 0.30%)</title><rect x="623.0" y="501" width="3.5" height="15.0" fill="rgb(223,68,6)" rx="2" ry="2" />
<text  x="625.96" y="511.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (3 samples, 0.45%)</title><rect x="282.0" y="453" width="5.3" height="15.0" fill="rgb(238,178,16)" rx="2" ry="2" />
<text  x="285.04" y="463.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.15%)</title><rect x="38.3" y="373" width="1.7" height="15.0" fill="rgb(221,220,32)" rx="2" ry="2" />
<text  x="41.26" y="383.5" ></text>
</g>
<g >
<title>runtime.futex (12 samples, 1.80%)</title><rect x="993.9" y="469" width="21.2" height="15.0" fill="rgb(214,64,11)" rx="2" ry="2" />
<text  x="996.92" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.45%)</title><rect x="806.7" y="437" width="5.3" height="15.0" fill="rgb(212,204,25)" rx="2" ry="2" />
<text  x="809.68" y="447.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.15%)</title><rect x="285.6" y="373" width="1.7" height="15.0" fill="rgb(226,34,35)" rx="2" ry="2" />
<text  x="288.57" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.15%)</title><rect x="628.3" y="453" width="1.7" height="15.0" fill="rgb(235,190,22)" rx="2" ry="2" />
<text  x="631.26" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.15%)</title><rect x="541.7" y="421" width="1.8" height="15.0" fill="rgb(230,116,50)" rx="2" ry="2" />
<text  x="544.71" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.15%)</title><rect x="269.7" y="229" width="1.7" height="15.0" fill="rgb(228,140,48)" rx="2" ry="2" />
<text  x="272.67" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.15%)</title><rect x="269.7" y="325" width="1.7" height="15.0" fill="rgb(210,26,23)" rx="2" ry="2" />
<text  x="272.67" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).ProcessBlockMessage (3 samples, 0.45%)</title><rect x="269.7" y="565" width="5.3" height="15.0" fill="rgb(219,47,42)" rx="2" ry="2" />
<text  x="272.67" y="575.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.15%)</title><rect x="29.4" y="357" width="1.8" height="15.0" fill="rgb(221,137,48)" rx="2" ry="2" />
<text  x="32.43" y="367.5" ></text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.15%)</title><rect x="255.5" y="389" width="1.8" height="15.0" fill="rgb(223,148,51)" rx="2" ry="2" />
<text  x="258.54" y="399.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.15%)</title><rect x="684.8" y="341" width="1.8" height="15.0" fill="rgb(246,134,51)" rx="2" ry="2" />
<text  x="687.79" y="351.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.15%)</title><rect x="296.2" y="421" width="1.7" height="15.0" fill="rgb(235,229,14)" rx="2" ry="2" />
<text  x="299.17" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="294.4" y="501" width="1.8" height="15.0" fill="rgb(250,22,26)" rx="2" ry="2" />
<text  x="297.40" y="511.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.15%)</title><rect x="297.9" y="389" width="1.8" height="15.0" fill="rgb(219,59,12)" rx="2" ry="2" />
<text  x="300.93" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.15%)</title><rect x="31.2" y="389" width="1.8" height="15.0" fill="rgb(205,128,34)" rx="2" ry="2" />
<text  x="34.20" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.30%)</title><rect x="31.2" y="469" width="3.5" height="15.0" fill="rgb(225,175,19)" rx="2" ry="2" />
<text  x="34.20" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.60%)</title><rect x="628.3" y="485" width="7.0" height="15.0" fill="rgb(243,68,42)" rx="2" ry="2" />
<text  x="631.26" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (4 samples, 0.60%)</title><rect x="615.9" y="453" width="7.1" height="15.0" fill="rgb(232,127,21)" rx="2" ry="2" />
<text  x="618.90" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (17 samples, 2.54%)</title><rect x="658.3" y="517" width="30.0" height="15.0" fill="rgb(248,143,5)" rx="2" ry="2" />
<text  x="661.29" y="527.5" >en..</text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.15%)</title><rect x="320.9" y="373" width="1.8" height="15.0" fill="rgb(237,217,17)" rx="2" ry="2" />
<text  x="323.90" y="383.5" ></text>
</g>
<g >
<title>runtime.timerproc (7 samples, 1.05%)</title><rect x="1177.6" y="581" width="12.4" height="15.0" fill="rgb(247,48,45)" rx="2" ry="2" />
<text  x="1180.63" y="591.5" ></text>
</g>
<g >
<title>math/big.nat.div (9 samples, 1.35%)</title><rect x="640.6" y="469" width="15.9" height="15.0" fill="rgb(238,174,4)" rx="2" ry="2" />
<text  x="643.63" y="479.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.15%)</title><rect x="683.0" y="373" width="1.8" height="15.0" fill="rgb(228,151,34)" rx="2" ry="2" />
<text  x="686.02" y="383.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (1 samples, 0.15%)</title><rect x="591.2" y="501" width="1.7" height="15.0" fill="rgb(206,34,2)" rx="2" ry="2" />
<text  x="594.17" y="511.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.15%)</title><rect x="1181.2" y="437" width="1.7" height="15.0" fill="rgb(226,180,37)" rx="2" ry="2" />
<text  x="1184.17" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (140 samples, 20.96%)</title><rect x="296.2" y="517" width="247.3" height="15.0" fill="rgb(246,154,49)" rx="2" ry="2" />
<text  x="299.17" y="527.5" >BCDns_0.1/certificateAuthority/s..</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.15%)</title><rect x="663.6" y="501" width="1.8" height="15.0" fill="rgb(234,102,28)" rx="2" ry="2" />
<text  x="666.59" y="511.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.15%)</title><rect x="1024.0" y="533" width="1.7" height="15.0" fill="rgb(215,96,4)" rx="2" ry="2" />
<text  x="1026.95" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Consensus).timer (3 samples, 0.45%)</title><rect x="707.8" y="581" width="5.3" height="15.0" fill="rgb(235,17,14)" rx="2" ry="2" />
<text  x="710.75" y="591.5" ></text>
</g>
<g >
<title>math/big.nat.set (1 samples, 0.15%)</title><rect x="614.1" y="453" width="1.8" height="15.0" fill="rgb(230,7,21)" rx="2" ry="2" />
<text  x="617.13" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="278.5" y="437" width="1.8" height="15.0" fill="rgb(230,74,31)" rx="2" ry="2" />
<text  x="281.50" y="447.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.15%)</title><rect x="612.4" y="341" width="1.7" height="15.0" fill="rgb(226,114,14)" rx="2" ry="2" />
<text  x="615.37" y="351.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.15%)</title><rect x="1025.7" y="485" width="1.8" height="15.0" fill="rgb(253,36,47)" rx="2" ry="2" />
<text  x="1028.72" y="495.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Reset (1 samples, 0.15%)</title><rect x="543.5" y="469" width="1.7" height="15.0" fill="rgb(231,160,28)" rx="2" ry="2" />
<text  x="546.47" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.30%)</title><rect x="499.3" y="325" width="3.5" height="15.0" fill="rgb(227,48,19)" rx="2" ry="2" />
<text  x="502.31" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.15%)</title><rect x="1025.7" y="469" width="1.8" height="15.0" fill="rgb(226,153,21)" rx="2" ry="2" />
<text  x="1028.72" y="479.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.15%)</title><rect x="299.7" y="389" width="1.8" height="15.0" fill="rgb(210,189,5)" rx="2" ry="2" />
<text  x="302.70" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (2 samples, 0.30%)</title><rect x="275.0" y="501" width="3.5" height="15.0" fill="rgb(217,92,2)" rx="2" ry="2" />
<text  x="277.97" y="511.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.15%)</title><rect x="700.7" y="469" width="1.8" height="15.0" fill="rgb(217,138,27)" rx="2" ry="2" />
<text  x="703.69" y="479.5" ></text>
</g>
<g >
<title>syscall.Read (29 samples, 4.34%)</title><rect x="762.5" y="517" width="51.2" height="15.0" fill="rgb(250,46,29)" rx="2" ry="2" />
<text  x="765.51" y="527.5" >sysca..</text>
</g>
<g >
<title>reflect.Value.Interface (1 samples, 0.15%)</title><rect x="697.2" y="453" width="1.7" height="15.0" fill="rgb(212,18,11)" rx="2" ry="2" />
<text  x="700.16" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (5 samples, 0.75%)</title><rect x="260.8" y="517" width="8.9" height="15.0" fill="rgb(240,12,37)" rx="2" ry="2" />
<text  x="263.84" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (4 samples, 0.60%)</title><rect x="628.3" y="469" width="7.0" height="15.0" fill="rgb(215,150,44)" rx="2" ry="2" />
<text  x="631.26" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposalReplyMessage (127 samples, 19.01%)</title><rect x="36.5" y="533" width="224.3" height="15.0" fill="rgb(233,72,41)" rx="2" ry="2" />
<text  x="39.50" y="543.5" >BCDns_0.1/messages.NewProposa..</text>
</g>
<g >
<title>reflect.MakeMapWithSize (2 samples, 0.30%)</title><rect x="681.3" y="453" width="3.5" height="15.0" fill="rgb(219,207,20)" rx="2" ry="2" />
<text  x="684.26" y="463.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.15%)</title><rect x="280.3" y="453" width="1.7" height="15.0" fill="rgb(224,110,52)" rx="2" ry="2" />
<text  x="283.27" y="463.5" ></text>
</g>
<g >
<title>runtime.makemap (1 samples, 0.15%)</title><rect x="683.0" y="421" width="1.8" height="15.0" fill="rgb(254,73,0)" rx="2" ry="2" />
<text  x="686.02" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).reset (1 samples, 0.15%)</title><rect x="746.6" y="517" width="1.8" height="15.0" fill="rgb(211,82,17)" rx="2" ry="2" />
<text  x="749.62" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (9 samples, 1.35%)</title><rect x="234.3" y="389" width="15.9" height="15.0" fill="rgb(242,162,14)" rx="2" ry="2" />
<text  x="237.34" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Block).GenerateMerkelRoot (1 samples, 0.15%)</title><rect x="278.5" y="517" width="1.8" height="15.0" fill="rgb(231,196,8)" rx="2" ry="2" />
<text  x="281.50" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="621.2" y="405" width="1.8" height="15.0" fill="rgb(221,9,43)" rx="2" ry="2" />
<text  x="624.20" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.30%)</title><rect x="218.4" y="389" width="3.6" height="15.0" fill="rgb(215,166,40)" rx="2" ry="2" />
<text  x="221.44" y="399.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.15%)</title><rect x="691.9" y="533" width="1.7" height="15.0" fill="rgb(220,174,39)" rx="2" ry="2" />
<text  x="694.86" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.div (10 samples, 1.50%)</title><rect x="594.7" y="453" width="17.7" height="15.0" fill="rgb(216,26,46)" rx="2" ry="2" />
<text  x="597.70" y="463.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.15%)</title><rect x="983.3" y="469" width="1.8" height="15.0" fill="rgb(250,110,29)" rx="2" ry="2" />
<text  x="986.32" y="479.5" ></text>
</g>
<g >
<title>runtime.resetspinning (5 samples, 0.75%)</title><rect x="1015.1" y="533" width="8.9" height="15.0" fill="rgb(248,45,2)" rx="2" ry="2" />
<text  x="1018.12" y="543.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.15%)</title><rect x="684.8" y="437" width="1.8" height="15.0" fill="rgb(251,202,30)" rx="2" ry="2" />
<text  x="687.79" y="447.5" ></text>
</g>
<g >
<title>reflect.unsafe_NewArray (1 samples, 0.15%)</title><rect x="276.7" y="357" width="1.8" height="15.0" fill="rgb(245,129,31)" rx="2" ry="2" />
<text  x="279.74" y="367.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.15%)</title><rect x="38.3" y="389" width="1.7" height="15.0" fill="rgb(252,81,50)" rx="2" ry="2" />
<text  x="41.26" y="399.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.60%)</title><rect x="1182.9" y="517" width="7.1" height="15.0" fill="rgb(254,133,54)" rx="2" ry="2" />
<text  x="1185.93" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (12 samples, 1.80%)</title><rect x="522.3" y="437" width="21.2" height="15.0" fill="rgb(209,129,5)" rx="2" ry="2" />
<text  x="525.28" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.15%)</title><rect x="714.8" y="501" width="1.8" height="15.0" fill="rgb(240,49,24)" rx="2" ry="2" />
<text  x="717.82" y="511.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func2 (2 samples, 0.30%)</title><rect x="840.2" y="549" width="3.6" height="15.0" fill="rgb(249,127,5)" rx="2" ry="2" />
<text  x="843.24" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.15%)</title><rect x="684.8" y="357" width="1.8" height="15.0" fill="rgb(252,78,24)" rx="2" ry="2" />
<text  x="687.79" y="367.5" ></text>
</g>
<g >
<title>runtime.handoffp (2 samples, 0.30%)</title><rect x="1177.6" y="501" width="3.6" height="15.0" fill="rgb(234,25,6)" rx="2" ry="2" />
<text  x="1180.63" y="511.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.15%)</title><rect x="928.6" y="517" width="1.7" height="15.0" fill="rgb(246,211,40)" rx="2" ry="2" />
<text  x="931.56" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.15%)</title><rect x="499.3" y="197" width="1.8" height="15.0" fill="rgb(205,63,32)" rx="2" ry="2" />
<text  x="502.31" y="207.5" ></text>
</g>
<g >
<title>runtime.getempty (2 samples, 0.30%)</title><rect x="875.6" y="373" width="3.5" height="15.0" fill="rgb(250,58,0)" rx="2" ry="2" />
<text  x="878.57" y="383.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.15%)</title><rect x="714.8" y="485" width="1.8" height="15.0" fill="rgb(233,180,3)" rx="2" ry="2" />
<text  x="717.82" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.30%)</title><rect x="282.0" y="357" width="3.6" height="15.0" fill="rgb(218,115,21)" rx="2" ry="2" />
<text  x="285.04" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.15%)</title><rect x="621.2" y="437" width="1.8" height="15.0" fill="rgb(225,81,51)" rx="2" ry="2" />
<text  x="624.20" y="447.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.15%)</title><rect x="626.5" y="453" width="1.8" height="15.0" fill="rgb(238,77,19)" rx="2" ry="2" />
<text  x="629.50" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.15%)</title><rect x="269.7" y="165" width="1.7" height="15.0" fill="rgb(212,143,38)" rx="2" ry="2" />
<text  x="272.67" y="175.5" ></text>
</g>
<g >
<title>syscall.Syscall (15 samples, 2.25%)</title><rect x="550.5" y="437" width="26.5" height="15.0" fill="rgb(214,104,16)" rx="2" ry="2" />
<text  x="553.54" y="447.5" >s..</text>
</g>
</g>
</svg>

