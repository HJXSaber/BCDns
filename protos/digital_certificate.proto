syntax = "proto3";

package protos;

import "google/protobuf/timestamp.proto";

service CertificateAuthority {
    rpc GetCertificate(Reserved) returns (Certificate) {}
    rpc ProposalCert(Certificate) returns (Reserved) {}
    rpc AuditResponse(AuditResult) returns(Reserved) {}
    rpc ShowUnauditedCert(Reserved) returns (stream Certificate) {}
    rpc AuditCert(AuditRequest) returns (Reserved) {}
}

message Certificate {
    RawCertificate rawCertificate = 1;
    repeated Signature signatures = 2;
}

message RawCertificate {
    int64 version = 1;
    bytes serial_number = 2;
    enum signature_algorithm {
        RSA = 0;
    }
    //删除该字段，避免在新节点加入时导致所有证书需要重新生成;Issuers will be the whole network nodes
    //repeated bytes issuers = 3;
    google.protobuf.Timestamp valid_from = 3;
    google.protobuf.Timestamp valid_to = 4;
    Subject subject = 5;
    enum public_key_algorithm {
        rsaEncryption = 0;
    }
    PublicKey public_key = 6;
    Addr addr = 7;
    int64 networkSize = 8;
}

message Subject {
    repeated string Country = 1;
    repeated string Organization = 2;
    repeated string OrganizationalUnit = 3;
    repeated string Locality = 4;
    repeated string Province = 5;
    repeated string StreetAddress = 6;
    repeated string PostalCode = 7;
    string SerialNumber = 8;
    string CommonName = 9;
}

message Signature {
    Subject subject = 1;
    bytes signature = 2;
}

message PublicKey {
    bytes N = 1;
    int64 E = 2;
}

message Addr {
    string Ip = 1;
    int32 port = 2;
}

message AuditResult {
    Certificate cert = 1;
    bool result = 2;
    Subject subject = 3;
}

message AuditRequest {
    Certificate cert = 1;
    bool allow = 2;
}

message Reserved {}